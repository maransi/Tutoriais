1. Criar um projeto Maven maven-archetype-webapp

GroupId:         com.alfaomega.common
ArtefactId:         SpringMVCValid

2. Alterar o pom.xml conforme abaixo:

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
        <modelVersion>4.0.0</modelVersion>
        <groupId>com.alfaomega.common</groupId>
        <artifactId>SpringMVCValid</artifactId>
        <packaging>war</packaging>
        <version>1.0-SNAPSHOT</version>
        <name>SpringMVC Maven Webapp</name>
        <url>http://maven.apache.org</url>

        <repositories>
                <repository>
                        <id>JBoss repository</id>
                        <url>http://repository.jboss.org/nexus/content/groups/public/</url>
                </repository>
        </repositories>


        <properties>
                <spring.version>3.0.5.RELEASE</spring.version>
        </properties>

        <dependencies>

                <!-- Spring 3 dependencies -->
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-core</artifactId>
                        <version>${spring.version}</version>
                </dependency>

                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-web</artifactId>
                        <version>${spring.version}</version>
                </dependency>

                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-webmvc</artifactId>
                        <version>${spring.version}</version>
                </dependency>

                <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-validator</artifactId>
                        <version>4.2.0.Final</version>
                </dependency>

        </dependencies>

        <build>
                <finalName>SpringMVCValid</finalName>
                <plugins>
                        <plugin>
                                <artifactId>maven-compiler-plugin</artifactId>
                                <version>2.3.2</version>
                                <configuration>
                                        <source>1.6</source>
                                        <target>1.6</target>
                                </configuration>
                        </plugin>
                </plugins>
        </build>

</project>


3. Criar o arquivo applicationContext.xml nas pasta WEB-INF conforme abaixo:

<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

        <context:component-scan base-package="com.alfaomega.common.controller" />

        <mvc:annotation-driven />

        <bean id="viewResolver"
                class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                <property name="prefix">
                        <value>/WEB-INF/pages/</value>
                </property>
                <property name="suffix">
                        <value>.jsp</value>
                </property>
        </bean>

        <bean class="org.springframework.context.support.ResourceBundleMessageSource"
                id="messageSource">
                <property name="basename" value="messages" />
        </bean>

</beans>



4. Alterar o web.xml conforme abaixo:

<web-app id="WebApp_ID" version="2.4"
        xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
        http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

        <display-name>Spring Web MVC Application</display-name>

        <servlet>
                <servlet-name>mvc-dispatcher</servlet-name>
                <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
                <load-on-startup>1</load-on-startup>
        </servlet>

        <servlet-mapping>
                <servlet-name>mvc-dispatcher</servlet-name>
                <url-pattern>*.do</url-pattern>
        </servlet-mapping>

        <context-param>
                <param-name>contextConfigLocation</param-name>
                <param-value>/WEB-INF/applicationContext.xml</param-value>
        </context-param>

        <welcome-file-list>
                <welcome-file>
                        /customer/signup.do
                </welcome-file>
        </welcome-file-list>
        <listener>
                <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
        </listener>
</web-app>





5. Criar as packages abaixo no source folder src/main/java

com.alfaomega.common.controller
com.alfaomega.common.model




6. Na package com.alfaomega.common.controller criar o programa java abaixo:

package com.alfaomega.common.controller;

import javax.validation.Valid;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.validation.ObjectError;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import com.alfaomega.common.model.Customer;

@Controller
@RequestMapping("/customer")
public class SignUpController {

        @RequestMapping(value = "/signup", method = RequestMethod.POST)
        public String addCustomer(
                        @Valid Customer customer,
                        BindingResult result) {

                /*for (Object object : result.getAllErrors()) {
                        if (object instanceof FieldError) {
                                FieldError fieldError = (FieldError) object;

                                System.out.println(fieldError.getField() + ":"
                                                + fieldError.getCode());

                        }

                        if (object instanceof ObjectError) {
                                ObjectError objectError = (ObjectError) object;

                        }
                }*/

                if (result.hasErrors()) {
                        return "SignUpForm";
                } else {
                        return "Done";
                }

        }

        @RequestMapping(method = RequestMethod.GET)
        public String displayCustomerForm(ModelMap model) {

                model.addAttribute("customer", new Customer());
                return "SignUpForm";

        }

}



7. Na package com.alfaomega.common.model criar o programa java abaixo:

package com.alfaomega.common.model;

import org.hibernate.validator.constraints.NotEmpty;
import org.hibernate.validator.constraints.Range;

public class Customer {

        @NotEmpty
        String name;

        @Range(min = 1, max = 150)
        int age;

        public String getName() {
                return name;
        }

        public void setName(String name) {
                this.name = name;
        }

        public int getAge() {
                return age;
        }

        public void setAge(int age) {
                this.age = age;
        }

        public Customer() {
        }

        @Override
        public String toString() {
                return "Customer [name=" + name + ", age=" + age + "]";
        }

}




8. No source folder src/main/resouces criar o arquivo  *** messages.properties ***  de propriedades abaixo:

NotEmpty.customer.name = Name is required!!!!!
Range.customer.age = Age value must be between 1 and 150!!!!




9. Criar as páginas abaixo na pasta WEB-INF/pages:


Done.jsp
--------

<html>
<body>
        <h2>Done</h2>
</body>
</html>


SignUpForm.jsp
--------------

<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<html>
<head>
<style>
.error {
        color: #ff0000;
}

.errorblock {
        color: #000;
        background-color: #ffEEEE;
        border: 3px solid #ff0000;
        padding: 8px;
        margin: 16px;
}
</style>
</head>

<body>
        <h2>Customer SignUp Form - JSR303 @Valid example</h2>

        <form:form method="POST" commandName="customer" action="/SpringMVCValid/customer/signup.do">
                <form:errors path="*" cssClass="errorblock" element="div" />
                <table>
                        <tr>
                                <td>Customer Name :</td>
                                <td><form:input path="name" /></td>
                                <td><form:errors path="name" cssClass="error" /></td>
                        </tr>
                        <tr>
                                <td>Customer Age :</td>
                                <td><form:input path="age" /></td>
                                <td><form:errors path="age" cssClass="error" /></td>
                        </tr>
                        <tr>
                                <td colspan="3"><input type="submit" /></td>
                        </tr>
                </table>
        </form:form>

</body>
</html>