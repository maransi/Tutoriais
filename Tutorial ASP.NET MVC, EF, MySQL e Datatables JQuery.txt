Tutorial ASP.NET MVC, EF, MySQL e Datatables JQuery
---------------------------------------------------

Parte 1 - Instalação das ferramentas
------------------------------------

    1. Instalando o Docker

        . No caso do windows, acesse a URL abaixo e baixe o instalador:

            https://store.docker.com/editions/community/docker-ce-desktop-windows

        . Utilizar a versão Community Edition (CE)

        . No caso do Linux execute os comandos abaixo no prompt no terminal:

            . A URL abaixo tem os passos atualizado para instalação do Docker:

                https://docs.docker.com/engine/install/ubuntu/

            . Instalação Atualizada

                sudo apt-get update
                sudo apt-get install \
                    ca-certificates \
                    curl \
                    gnupg \
                    lsb-release

                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

                echo \
                    "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
                    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

                sudo apt-get update
                sudo apt-get install docker-ce docker-ce-cli containerd.io
                sudo docker --version

                sudo groupadd docker
                sudo gpasswd -a <usuario> docker
                sudo chown "$USER":"$USER" /var/run/docker.sock -R
                sudo service docker restart

                docker --version


    2. Crie o container do mysql:

        # docker run -d --name mysqldb -e MYSQL_ROOT_PASSWORD=root -p 3306:3306 mysql:5.7 
        docker run -d --name mysqldb -e MYSQL_ROOT_PASSWORD=root -p 3306:3306  mysql:8.0 

        # Ao executar o comando abaixo, entraremos na linha de comando do container. Digite o comando abaixo:
        #
        #   mysql -u root -p
        #
        # Informe a senha "root"
        #
        #       create database desenv;
        #
        docker container exec -it mysql bash



    3. Instalando o .NET Core SDK

        wget https://dot.net/v1/dotnet-install.sh

        chmod +x dotnet-install.sh

        ./dotnet-install.sh -c 3.1
        ./dotnet-install.sh -c 5.0
        ./dotnet-install.sh -c 6.0
        ./dotnet-install.sh -c 8.0
        
        # Se o bash shell for o padrão do linux execute as duas linha abaixo
        echo 'export PATH="/home/$USER/.dotnet:/home/$USER/.dotnet/tools:$PATH"' >> ~/.bashrc

        source ~/.bashrc

        # Se o zsh shell for o padrão do linux execute as duas linha abaixo
        echo 'export PATH="/home/$USER/.dotnet:/home/$USER/.dotnet/tools:$PATH"' >> ~/.zshrc

        source ~/.zshrc

        # Caso for o Fish Shell, insira na primeira linha do arquivo "~/.config/fish/config.fish" a linha abaixo
        set -x PATH $PATH /home/$USER/.dotnet /home/$USER/.dotnet/tools

        dotnet --info
        dotnet --version
        dotnet --list-runtimes
        dotnet --list-sdks

        dotnet tool install --global dotnet-ef --version 8.0.6

    4. Instalando o VS Code

        . Instalação das extensões do VSCode

                C# 
                C# Extensions
                C# XML Documentation Comments
                C# Snippets
                vscode-icons (Opcional)
                Numbered Bookmarks
                Docker
                PostgreSQL
                Postman

            . Atalhos:

                Ctrl + K + D ou Shit + Alt + F:             Identa todo o seu código automaticamente;
                Ctrl + K + C:                               comenta um bloco de linhas;
                Ctrl + /                                    Comenta a linha
                Ctrl + K + U:                               descomenta um bloco de linhas;
                Alt + Left Arrow:                           durante a programação, volta um método que você estava navegando;
                Alt + Right Arrow:                          durante a programação, avança um método que você estava navegando;
                Alt + M                                     ao editar uma página HTML e quiser cercar um bloco de tags com uma outra tag 
                Alt + Shift + -                             se precisar apagar uma tag HTML que cerca um conjunto de outras tags
                Ctrl + .:                                   implementa o método/classe inexistente que você acabou de escrever;
                Ctrl + M + O:                               esconde todas as regions da classe atual;
                Ctrl + Shift + B:                           compila todos os projetos;
                F5:                                         manda depurar um projeto;
                Ctrl + F5:                                  manda executar um projeto;
                F10:                                        durante a depuração, avança uma linha;
                F11:                                        durante a depuração, avança uma linha entrando nos detalhes da mesma;


        . Configurar Visual Studio Code para .NETCore

            . Acesse File / Preferences / Settings

            . Digite C#

            . Acesse "C# Configuration / CSharp Format Enabled" e habilite a configuração

            . Digite "Format on save" e habilite a configuração

            . Digite "Final" e habilite a configuração "Files: Insert final newline" e habilite a configuração


Parte 2 - Criação do Projeto
----------------------------

    1. Crie a pasta da "Solution":

        mkdir MvcDatatable

        cd MvcDatatable

        dotnet new sln -n MvcDatatable

        dotnet new mvc -o ./src/MvcDatatable.Web -n MvcDatatable.Web -f net8.0
        dotnet sln add ./src/MvcDatatable.Web/

    2. Dentro da pasta do projeto Web adicione as bibliotecas necessárias para trabalharmos no projeto:

        cd src/MvcDatatable

        dotnet add package Microsoft.EntityFrameworkCore --version 8.0.6
        dotnet add package Microsoft.EntityFrameworkCore.Design --version 8.0.6
        dotnet add package Microsoft.EntityFrameworkCore.Tools --version 8.0.6
        dotnet add package Pomelo.EntityFrameworkCore.MySql --version 8.0.2

        dotnet restore

    3. Execute o projeto para ver se foi bem sucedido a contrução:

        cd ~/workspace/dotnet/MvcDatatable

        dotnet run --project ./src/MvcDatatable.Web 

Parte 3 - Criação do banco de dados
-----------------------------------

    1. Faça a alteração abaixo na classe do projeto "./src/MvcDatatable.Web/MvcDatatable.Web.csproj" para eliminar 
        o aviso "Null-Value":

        <Project Sdk="Microsoft.NET.Sdk.Web">

            <PropertyGroup>
                <TargetFramework>net8.0</TargetFramework>
                <Nullable>disable</Nullable>
                <ImplicitUsings>enable</ImplicitUsings>
                                    |
                                    +---> Altere para "disable"
            </PropertyGroup>

            ...
        </Project>

    2. Acesse os arquivos "appsettings.json", "appsettings.Development.json" e insira a linha abaixo:


        // IMPORTANTE: Caso ocorra algum problema na identificação do servidor "mysql" como localhost, use o fisico do container.
        //              Utilize o comando "docker exec mysqldb hostname -I" para encontrar o IP do container
        //              ou
        //             Execute o comando:   docker container inspect mysqldb |grep -i "IPAddress\|Gateway"
        //
        //              Outra dica importante: Caso ocorra o erro "Authentication method 'caching_sha2_password' failed.", acrescente aos
        //              parâmetros de autenticação do "DotNetCoreMySQLAppConnection" o item "; AllowPublicKeyRetrieval=True". Isto ocorre 
        //              ao utilizar o container docker "MySQL:8.XX"
        //
        // IMPORTANTE: As configurações de "Development" existentes nos "Properties/launchSetting.json" não está apontando
        //                para o arquivo "appsetings.Development.json", talvez isto ocorra devido ao comando "dotnet ef migrations..."
        //                enxergar somente o arquivo "appsetings.json"
        //
        // IMPORTANTE: Quando for executar "dotnet ef migrations add CreationInicial" o comando irá procurar sempre os parâmetros de conexão no arquivo
        //              "appsettings.json". Nesse caso somos obrigados a criar a conexão nos dois arquivos "appsetings.json" e "appsetings.Development.json"
        {
            ...,
            "ConnectionStrings": {
                "DefaultConnection": "server=localhost; port=3306; database=clientedb; user=root; password=root; Persist Security Info=false; Connect Timeout=300;SSL Mode=None; AllowPublicKeyRetrieval=True"
            }
        }

    3. Crie o arquivo "GlobalUsings.cs" na raiz do projeto "MvcDatatable.Web" com o conteúdo abaixo:

        global using System.ComponentModel.DataAnnotations;
        global using System.ComponentModel.DataAnnotations.Schema;
        global using Microsoft.EntityFrameworkCore;
        global using MvcDatatable.Web.Models;
        global using MvcDatatable.Web.Data;
        global using MvcDatatable.Web.Utils;
        global using MvcDatatable.Web.ViewModels;
        global using MvcDatatable.Web.ViewModels.Cliente;
        global using MvcDatatable.Web.Extensions;

    4. Crie a pasta "Utils" na raiz do projeto

    5. Crie a interface "AuditEntity.cs" na pasta "Utils" como abaixo:

        using System.ComponentModel;
        using System.ComponentModel.DataAnnotations.Schema;

        namespace MvcDatatable.Web.Utils;

        public abstract class AuditEntity
        {

            [Column("dataInclusao", TypeName = "TIMESTAMP")]
            [DefaultValue("current_timestamp")]
            [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
            public DateTime? DataInclusao { get; set; }


            [Column("dataAlteracao", TypeName = "DATETIME")]
            public DateTime? DataAlteracao { get; set; }
        }

    6. Crie a classe "Cliente.cs" abaixo dentro da pasta "Models":

        using System.ComponentModel;

        namespace MvcDatatable.Web.Models;

        [Table("cliente")]
        public class Cliente : AuditEntity
        {
            [Key]
            [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
            [Column("codigo")]
            public int Codigo { get; set; }

            [Required(ErrorMessage = "CPF é obrigatorio")]
            [Column("cpf", TypeName = "VARCHAR(15)")]
            public string Cpf { get; set; }

            [Required(ErrorMessage = "Nome é obrigatorio")]
            [MaxLength(100, ErrorMessage = "Este campo deve ter entre 5 a 100 caracateres")]
            [MinLength(5, ErrorMessage = "Este campo dever ter entre 5 a 100 caracateres")]
            [Column("nome", TypeName = "VARCHAR(100)")]
            public string Nome { get; set; }

            [Required(ErrorMessage = "Data de Nascimento é obrigatorio")]
            [Column("dataNascimento", TypeName = "DATE")]
            public DateTime? DataNascimento { get; set; }

            [Column("rg", TypeName = "VARCHAR(14)")]
            public string Rg { get; set; }

            [Required(ErrorMessage = "Gênero é obrigatorio")]
            [Column("sexo", TypeName = "CHAR(1)")]
            public string Sexo { get; set; }

            [Required(ErrorMessage = "Estado Civil é obrigatorio")]
            [Column("estadoCivil", TypeName = "VARCHAR(25)")]
            public string EstadoCivil { get; set; }

            [Column("pai", TypeName = "VARCHAR(100)")]
            public string Pai { get; set; }

            [Column("mae", TypeName = "VARCHAR(100)")]
            public string Mae { get; set; }

            [Required(ErrorMessage = "Endereço é obrigatorio")]
            [MaxLength(100, ErrorMessage = "Endereço deve ter entre 5 a 100 caracateres")]
            [MinLength(5, ErrorMessage = "Endereço deve ter entre 5 a 100 caracateres")]
            [Column("endereco", TypeName = "VARCHAR(100)")]
            public string Endereco { get; set; }

            [Required(ErrorMessage = "Cidade é obrigatorio")]
            [MaxLength(100, ErrorMessage = "Cidade deve ter entre 5 a 100 caracateres")]
            [MinLength(5, ErrorMessage = "Cidade deve ter entre 5 a 100 caracateres")]
            [Column("cidade", TypeName = "VARCHAR(50)")]
            public string Cidade { get; set; }

            [Required(ErrorMessage = "UF é obrigatorio")]
            [MaxLength(2, ErrorMessage = "UF deve ter 2 caracateres")]
            [MinLength(2, ErrorMessage = "UF deve ter 2 caracateres")]
            [Column("estado", TypeName = "CHAR(2)")]
            public string Estado { get; set; }

            [Required(ErrorMessage = "CEP é obrigatorio")]
            [Column("cep", TypeName = "CHAR(8)")]
            public string Cep { get; set; }

            [Required(ErrorMessage = "Telefone é obrigatorio")]
            [Column("telefone", TypeName = "VARCHAR(20)")]
            public string Telefone { get; set; }

            [Required(ErrorMessage = "E-Mail é obrigatorio")]
            [EmailAddress(ErrorMessage = "Invalido endereço de E-Mail")]
            [Column("email", TypeName = "VARCHAR(100)")]
            public string Email { get; set; }

            [Required(ErrorMessage = "Salário é obrigatorio")]
            [DisplayFormat(DataFormatString = "{0:C}")]
            [DefaultValue(0)]
            [Column("salario", TypeName = "DECIMAL(13,2)")]
            public decimal Salario { get; set; }
        }

    7. Crie a pasta "Data" na raiz do projeto e crie a classe "ApplicationDbContext.cs" como abaixo:

        using Microsoft.EntityFrameworkCore;

        namespace MvcDatatable.Web.Data;

        public class ApplicationDbContext : DbContext
        {

            public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)
                : base(options)
            {
            }

            public DbSet<Cliente> Clientes{ get; set; }


            public override int SaveChanges()                   // Método Incluido
            {
                var entries = ChangeTracker
                    .Entries()
                    .Where(e => e.Entity is AuditEntity && (
                            e.State == EntityState.Added
                            || e.State == EntityState.Modified));

                foreach (var entityEntry in entries)
                {
                    ((AuditEntity)entityEntry.Entity).DataAlteracao = DateTime.Now;

                    if (entityEntry.State == EntityState.Added)
                    {
                        ((AuditEntity)entityEntry.Entity).DataInclusao = DateTime.Now;
                    }
                }

                return base.SaveChanges();
            }

            public override Task<int> SaveChangesAsync(CancellationToken cancellationToken = default)   // Método Incluido
            {
    /*            
                var insertedEntries = this.ChangeTracker.Entries()
                                    .Where(x => x.State == EntityState.Added)
                                    .Select(x => x.Entity);

                foreach (var insertedEntry in insertedEntries)
                {
                    var auditableEntity = insertedEntry as AuditEntity;
                    //If the inserted object is an Auditable. 
                    if (auditableEntity != null)
                    {
                        auditableEntity.DataInclusao = DateTime.Now;
                    }
                }
    */

                var modifiedEntries = this.ChangeTracker.Entries()
                        .Where(x => x.State == EntityState.Modified)
                        .Select(x => x.Entity);

                foreach (var modifiedEntry in modifiedEntries)
                {
                    //If the inserted object is an Auditable. 
                    var auditableEntity = modifiedEntry as AuditEntity;
                    if (auditableEntity != null)
                    {
                        auditableEntity.DataAlteracao = DateTime.Now;
                    }
                }
                return base.SaveChangesAsync(cancellationToken);
            }
        }

    8. Adicione as linhas abaixo na classe "Program.cs":


        ...
        var builder = WebApplication.CreateBuilder(args);

        var connectionString = builder.Configuration.GetConnectionString("DefaultConnection");  // Linha inserida

        builder.Services.AddDbContext<ApplicationDbContext>(options =>                          // Linha inserida
            options.UseMySql(connectionString, ServerVersion.AutoDetect(connectionString)));
        ...

    9. Acesse o MySQL e execute os comandos abaixo:

        CREATE USER 'root'@'172.17.0.1' IDENTIFIED BY 'root'; 
        GRANT ALL PRIVILEGES ON *.* TO 'root'@'172.17.0.1' WITH GRANT OPTION;
        FLUSH PRIVILEGES;

    10. Execute o comando abaixo na pasta raiz do projeto:

        cd src/MvcDatatable.Web

        dotnet ef migrations add CreationInitial
        dotnet ef database update

    11. Crie o arquivo "insertCliente.sql" na raiz do projeto com o conteúdo abaixo:

        USE clientedb;

        ALTER TABLE cliente ALTER dataInclusao  SET DEFAULT(current_timestamp);

        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (53,'570.097.758-34','SELMA MARIA SPINOLA GOMES','1952-04-19','5.563.343-2','F','DIVORCIADO','RENATO PEREIRA GOMES','AIDA SPINOLA GOMES','RUA BRIGADEIRO GAMA BARCELOS','SÃO PAULO','SP','04355070','11 50347366', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (181,'090.568.028-60','ALBA DE OLIVEIRA GASPAR','1938-07-23','12253495-5','F','VIUVO','AGUINALDO COSTA','FRANCELINA SANTOS COSTA','RUA GOIAS','PERUIBE','SP','11750000','13 34552725', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (311,'619.909.498-00','MARCIA SUELY CAPUTO LIMA','1950-04-06','52380786','F','SOLTEIRO','EOLO  LIMA','MARIA ZELIA CAPUTO LIMA','Avenida Braz Leme','São Paulo','SP','02022020','11 29590294', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (737,'127.074.818-15','ADEMAR BRASILIO PANARIELO','1941-03-19','19411108','M','CASADO','BRASILIO PANARIELO','MARIA  ALICE PANARIELO','Avenida dos Bancários','Santos','SP','11030301','13 32381745', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (874,'049.045.238-81','VILSON BORGES LUZ','1963-12-15','15535397-4','M','COMPANHEIRO','VALDELINO SILVA LUZ','MARIA DAS DORES BORGES LUZ','Praça Tenente Mauro Batista de Miranda','Santos','SP','11013360','13 34680638', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (1110,'050.391.628-55','VALDEMIR MENEZES DA SILVA','1964-05-25','20.876.169-X','M','CASADO','VALTER FERREIRA DA SILVA','MARIA DE LOURDES MENEZES DA SILVA','RUA JOSE VIGLETTI','SAO PAULO','SP','02218090','11 22125997', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (1331,'084.613.208-75','AGILMAR DO NASCIMENTO GUIMARAES','1965-01-29','16.431.524-X','M','SEPAR.JUDIC','ARNALDO MACHADO GUIMARÃES','MARIA DE LOURDES DO NASCIMENTO GUIMARÃES','RUA TAVANNES','São Paulo','SP','02443090','11 23590147', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (1351,'018.020.098-41','MARCIO VENEZIANO','1960-08-11','298655913','M','OUTROS','ARTHUR VENEZIANO','BENEDITA DE OLIVEIRA','R TAMBAU ','GUARUJA','SP','11451170','13 30174206', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (1461,'097.825.188-16','HILDA MEDEIROS DA SILVA','1951-08-27','30.771.896-7','F','VIUVO','HELIO DA SILVA','BENEDITA MEDEIROS DA SILVA','CAM MONSENHOR MOREIRA ','SANTOS','SP','11013760','13 32216040', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (1637,'221.250.781-04','NADIA FURTADO DE ANDRADE','1960-10-31','554.062','F','SOLTEIRO','ADYR VIEIRA DE ANDRADE','DILMA FURTADO DE ANDRADE','Rua Doutor Antônio Cansanção','Maceió','AL','57035190','82 33163433', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (1693,'802.634.108-20','HAVILA MEIRE DA SILVA','1954-11-14','7.255.413-7','F','SOLTEIRO','ALTINO JOSÉ DA SILVA','IRIA VIEIRA DA COSTA SILVA','AV CARAMURU','RIBEIRÃO PRETO','SP','14025710','16 36216563', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (1852,'025.557.718-40','LANA CRISTINA FERRETE','1961-10-06','14.122.254-2','F','DIVORCIADO','NILTON LUIZ FERRETE','MARLENE ALVES FERRETE','Rua Liberdade','Santos','SP','11025030','13 32274676', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (1888,'057.484.021-49','JOAO XAVIER DE ARRUDA','1951-06-06','243.752','M','CASADO','NÃO DECLARADO','NEUZA XAVIER DE ARRUDA','Quadra QR 414 Conjunto 12','Brasília','DF','72320216','61 33576295', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (2048,'252.437.198-03','ALEXANDRE BATEL','1976-12-06','27.484.937-9','M','SOLTEIRO','ANTONIO BATEL NETO','MARIA JOSE BATEL','Rua Frei Orlando','São Paulo','SP','03432010','11 27838252', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (2128,'039.546.638-56','MARLUCE FRANCA SILVA DE OLIVEIRA','1962-07-03','15.288.986-3','F','CASADO','FRANCISCO VIANA DA SILVA','MARIA MARLENE DE FRANÇA SILVA','Caminho Monsenhor Moreira','Santos','SP','11013760','13 32345486', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (2135,'033.749.711-72','FRANCISCO FELIX DE ARAUJO','1947-12-14','194499','M','CASADO','INÁCIO  FELIX DE ARAUJO','INÁCIA  DA COSTA  ARAUJO','Quadra QMS 48','Brasília','DF','73080260','61 32974811', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (2171,'059.379.988-71','ALEXANDRE ABDALA JUNIOR','1963-01-12','116211192','M','SOLTEIRO','ALEXANDRE ABDALA','MIRIAM MELLO ABDALA','Rua Sérgio Porto','Guarulhos','SP','07114020','11 24080926', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (2196,'024.998.433-49','JOSE CLAIRTON SILVA ALMEIDA','1951-10-07','2006009027670','M','CASADO','RAIMUNDO GUEDES DE ALMEIDA','MARIA MARGARIDA DA SILVA  ALMEIDA','Avenida José do Patrocínio','Fortaleza','CE','60410150','85 34911124', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (2226,'238.663.301-20','MARIA DE LOURDES SILVA XAVIER','1944-05-18','153443','F','CASADO','GUSTAVO DORNELAS DA SILVA','MARIA JOSÉ DO NASCIMENTO','QR 414 CONJUNTO 12','Brasília','DF','72320216','61 33576295', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (2486,'018.188.038-52','NEIDE APARECIDA DA CRUZ SILVA','1951-06-21','13.621.163-X','F','COMPANHEIRO','PEDRO MAXIMIANO DA CRUZ','ADELINA FIRMINA DA CRUZ','Rua Barão do Rio Branco','Guarujá','SP','11451042','13 33414521', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (2561,'728.329.408-20','DIRSON DE SOUZA BENTO','1944-11-26','3.849.880-7','M','COMPANHEIRO','ZACARIAS JOAQUIM BENTO','EVA RIBEIRO DE SOUZA','Rua dos Carvalhos','Praia Grande','SP','11712510','13 34774305', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (2796,'007.252.358-10','MARIA APARECIDA ALVES PINTO','1946-09-10','3.613.817-4','F','CASADO','ACACIO TOMAZ ALVES','MARCOLINA JULIA DE FEO FLORA  ALVES','Rua Domiciano Ribeiro','São Paulo','SP','02565090','11 22398682', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (2920,'433.263.828-04','PEDRO LUIZ DA COSTA FILHO','1950-02-16','48624548','M','CASADO','PEDRO LUIZ DA COSTA','TERESA GONÇALVES DA COSTA','R ARISTOTELES FERREIRA ','SANTOS','SP','11020140','13 33854557', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3089,'158.932.348-39','SONIA REGINA FARIA VIEIRA','1956-08-03','13621324-8','F','VIUVO','ANTONIO FARIA GOMES','CAROLINA VARGAS FARIA','R ANTONIO FERNANDES ','GUARUJA','SP','11430340','13 33044759', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3180,'127.893.567-34','ADELCYR CORREA MACHADO','1935-12-30','01.789.771-1','F','SOLTEIRO','ANTONIO NATALICIO MACHADO','ZULEIKA IGNACIO CORREA MACHADO','Rua Pernambuco','Rio de Janeiro','RJ','20730030','21 38992687', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3299,'512.545.301-34','CELINA FERREIRA LONGO','1938-01-23','122678272-8','F','VIUVO','TOME FRANKLIN FERREIRA','ROSA CARDOSO FERREIRA','QD 103 ','BRASILIA','DF','71909000','61 34357562', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3304,'788.826.648-72','ROSEMARY EDLINGER PEREIRA LOPES','1948-05-13','5629560-1','F','SOLTEIRO','JOSÉ BENEDICTO PEREIRA LOPES','MIRARIR EDLINGER LOPES','Rua Guaratinguetá','Taubaté','SP','12060210','12 36332449', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3349,'094.747.813-20','ALCENILDES CORREA REIS','1954-01-05','0529305520147','F','COMPANHEIRO','VENANCIO VALERIO DOS REIS','ZILDA CORREA REIS','Rua Manoel Jansen Ferreira','São Luís','MA','65074170','98 32224071', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3431,'077.813.518-78','IONE MACIEL','1958-04-02','189024586','F','SOLTEIRO','BENEDITO MACIEL','MARIA JOSÉ DOS SANTOS','RUA CINQUENTA E OITO ','SÃO VICENTE','SP','11301000','13 35641440', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3436,'102.095.468-08','ERIDULCE FERREIRA NEIVA','1943-12-24','5534463X','F','OUTROS','CICERO FERREIRA DE MELO','FELICIDADE FERREIRA MELO','RUA SILVIO RIZZARDO ','CAMPINAS','SP','13060077','19 32290837', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3462,'263.306.858-86','MARCILIO MARTINS DE SOUZA','1976-10-23','283264056','M','SOLTEIRO','JOSÉ MARTINS DE SOUZA','MARIA DE LOURDES SOUZA','Rua Sete','Guarujá','SP','11461380','13 30129882', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3604,'204.884.593-20','ANTONIA CELIA DA COSTA LOPES','1964-07-13','37.208.964-1','F','VIUVO','JOAQUIM LOPES DA COSTA','RAIMUNDA NINO MARTINS','RUA MONSENHOR GERALDO BOROWSKI','SÃO VICENTE','SP','11370360','13 30132047', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3616,'053.800.118-61','NANCILIANY MARCAL','1964-02-11','16954252','F','SOLTEIRO','LEONARDO GARCIA MARÇAL','MARIA MARCILIA MARÇAL','Rua José Clemente Pereira','Santos','SP','11070321','13 32891563', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3648,'005.686.908-85','ARIOVALDO DONIZETI DE SOUZA','1959-08-12','12437209','M','DIVORCIADO','MANOEL DOMINGOS DE SOUZA','IOLANDA DE SOUZA','RUA PAPA SANTO EUSÉBIO','CAMPINAS','SP','13068215','19 33850598', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3685,'109.691.558-83','MARCIO HENRIQUE DE SOUSA NARCISO','1968-06-09','217383014','M','OUTROS','EUCLIDES DE SOUSA NARCISO','ANA  ANTONIA DE SOUSA NARCISO','R TENENTE HERMINIO DA C COIMBRA','TREMEMBE','SP','12120000','12 36722764', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3686,'122.116.378-76','ARISTIDES SERAFIM','1947-02-09','12.658.786-3','M','CASADO','MARTIMIANO SERAFIM','JOSEFINA CONSTANCIO','RUA URBANO FIGUEIRA','TREMEMBE','SP','12120000','12 36744786', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3721,'137.504.998-45','ALEXANDRINA ROSA RODRIGUES','1955-08-08','236155738','F','VIUVO','FLAVIO ROSA','LUZIA RAMOS ROSA','Rua José Milani','Jundiaí','SP','13207691','11 45213135', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3725,'054.965.353-87','EDIVALDO ALVES BEZERRA','1947-02-24','7135764','M','SEPAR.JUDIC','NAO DECLARADO','SILVADIRA  ALVES BEZERRA','AV AFONSO PENA ','SANTOS','SP','11020001','13 33944084', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3741,'130.612.368-21','MARIA DA GRACA LUCIANO DA SILVA','1948-07-22','134077684','F','CASADO','ELIAS MOREIRA DA SILVA','PEDRA LUCIANO DA SILVA','Rua Comandante Fernando de Barros Morgado','Taubaté','SP','12051280','12 36222736', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3745,'266.998.158-57','MARCELO FERREIRA VAZ','1976-03-01','272626557','M','OUTROS','ADERALDO FERREIRA VAZ','ROSA MENDES VAZ','RUA BILL KID','SANTA ISABEL','SP','07500000','11 46566878', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (3758,'998.433.748-00','ANTONIO FORTUNATO FILHO','1957-05-03','11224054','M','CASADO','ANTONIO FORTUNATO','MARIA DA GLÓRIA FORTUNATO','Rua Quatá','Carapicuíba','SP','06390270','11 42027921', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (4112,'112.964.459-68','JOAO DESTRI','1938-06-24','106.056','M','SOLTEIRO','PEDRO DESTRI','MARIA DAS DORES DESTRI','Rua Silva Jardim','Florianópolis','SC','88020199','48 32229962', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (4239,'773.233.438-87','ELIZABETH MARQUES','1949-06-04','85121599','F','SOLTEIRO','JOAQUIM FIDELIS MARQUES','TEREZA MARIA MARQUES','AV MARECHAL RONDON ','CAMPINAS','SP','13070176','19 32416529', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (4253,'149.721.748-20','MARIO MARQUES DA SILVA JUNIOR','1943-05-29','4187620','M','CASADO','MARIO MARQUES DA SILVA','MARIA COSTA DA SILVA','Rua Basiléia','Santo André','SP','09260210','11 39696550', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (4325,'104.228.678-70','ELISABETE DA COSTA SILVEIRA','1968-02-09','15551326','F','SOLTEIRO','JOSE MACHADO SILVEIRA','RENI DA COSTA SILVEIRA','Rua Acarapereira','São Paulo','SP','02809030','11 29257126', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (4346,'002.902.178-22','ANA ROSA DA SILVA OLIVEIRA','1952-08-30','12.170.386-1','F','SOLTEIRO','AMADO RIBEIRO DA SILVA','DILMA DOS SANTOS RIBEIRO','R JOSE MALAVAZZI','ITAPETININGA','SP','18211320','15 35270753', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (4402,'215.223.590-87','OSVALDO DOS SANTOS SOARES','1940-05-03','7010268634','M','SOLTEIRO','ACÁCIO DOS SANTOS SOARES','MARIA SILVEIRA SANTOS','Rua Guilherme Grovermann','Novo Hamburgo','RS','93415530','51 35823630', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (4978,'857.515.028-68','PAULO MESSIAS DOS SANTOS','1951-03-30','5098454-8','M','OUTROS','JOSÉ MESSIAS DOS SANTOS','ANA MARIA DE OLIVEIRA','Rua Bartolomeu de Gusmão','Mauá','SP','09310680','11 45459376', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (5033,'978.075.838-00','FRANCISCO ASSIS DE OLIVEIRA','1958-03-12','123508563','M','SOLTEIRO','SEVERINO JOSÉ DE OLIVEIRA','AURINA DANTAS DE OLIVEIRA','Rua H30A','São José dos Campos','SP','12228740','12 39473577', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (5154,'885.274.258-15','MARIA DA GLORIA NEVES DA SILVA','1949-08-12','57418172','F','SOLTEIRO','PAULO BATISTA DAS NEVES','JULIA BARBOSA','RUA JOAQUIM XAVIER TEIXEIRA','PERUIBE','SP','11750000','13 34541423', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (5161,'137.362.978-90','SUEILSON MESSIAS','1970-04-02','23439328','M','DIVORCIADO','AILTON JOSÉ MESSIAS','ONICIA CARDOSO MESSIAS','R FULGENIO DE GODOY ','JUNDIAI','SP','13216750','11 39633173', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (5187,'068.350.778-83','JOAO ROBERTO GUILHERME','1965-06-08','17666322','M','SOLTEIRO','ANTONIO GUILHERME','TEREZA PADELLA','R DURVAL CHIOCHETTI ','JUNDIAI','SP','13212341','11 45252685', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (5207,'091.347.078-32','LUIS AUGUSTO POMPERMAIER','1967-09-24','17.670.778-5','M','SOLTEIRO','IOZUALDO POMPERMAIER','VERA MARIA DE GODOY POMPERMAIER','RUA DOUTOR FRANCISCO FEIO','PIRACICABA','SP','13420440','19 33825317', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (5249,'627.418.458-91','SILVIO RODRIGUES DA SILVA','1940-08-27','151595379','M','DIVORCIADO','JOSÉ RODRIGUES DA SILVA','JOSEFINA RODRIGUES DA SILVA','AL DAS GREVILEAS ','PINDAMONHANGABA','SP','12443620','12 36371688', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (5446,'169.598.259-20','MAURO HERNANDES RODRIGUES','1950-07-03','208871','M','CASADO','ODON RODRIGUES','GECY HERNANDES RODRIGUES','Avenida Jacarandá','Brasília','DF','71927540','61 35461994', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (5479,'095.158.898-20','NEUZA DAS GRACAS MAEDA','1947-11-24','63052489','F','VIUVO','JOSÉ CLEMENTE RIBEIRO','FRANCISCA GOMES RIBEIRO','Rua José Carrieri','Mogi das Cruzes','SP','08738140','11 47212391', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (5537,'004.628.196-71','MARISTELA DE ALMEIDA','1958-01-24','0498273424','F','SOLTEIRO','DIONISIO EUGÊNIO DE ALMEIDA','CONCEIÇÃO FERNANDES DE ALMEIDA','Avenida Getúlio Vargas','Juiz de Fora','MG','36010110','32 32120275', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (5833,'153.304.199-72','MILTON RAIMUNDO PINTO','1940-01-29','153131342','M','SOLTEIRO','JOAQUIM DOS SANTOS PINTO','LAURA RAIMUNDO PINTO','Rua Jaçanã','Campinas','SP','13054130','19 32244267', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (5834,'183.892.988-64','SONIA MARIA DE SOUZA CURSINO','1960-08-19','171490174','F','CASADO','NAO DECLARADO ','AMÉRICA DE SOUZA','R DOS TOPOGRAFOS ','SAO JOSE DOS CAMPOS','SP','12225751','12 32069114', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (5976,'358.541.118-53','LUIZA RAMOS ROCHA','1940-08-19','5.491.966-6','F','SOLTEIRO','DOMINGOS DE RAMOS','AMELIA CAMARGO DE RAMOS','R JUNDIAI ','PERUIBE','SP','11750000','13 34554089', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (6052,'068.526.038-06','MARIVALDA CHIARAMONTE FONSECA DOS SANTOS','1964-12-25','13946045','F','CASADO','ALDO FONSECA','AUREA  ALICE CHIARAMONTE FONSECA','Rua Riolando Machado','Jundiaí','SP','13212415','11 44921503', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (6219,'815.374.257-49','TERESA PAES SANTOS','1949-10-25','368958','F','VIUVO','FRANCISCO MANOEL PAES','DEOLINDA COSTA PAES','Rua Crispim Mira','Florianópolis','SC','88020540','48 33241408', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (6246,'364.651.008-00','ROBERTO LOUREIRO','1951-08-23','5757498','M','CASADO','ARLINDO LOUREIRO','FRANCISCA DE L LOUREIRO','R CISPLATINA ','SANTO ANDRE','SP','09121431','11 29886643', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (6300,'374.904.270-53','LADI HELENA GOMES ARIOLI','1940-04-20','1022046781','F','VIUVO','EURIPEDES GOMES','RITA CALAGE GOMES','Rua Cuiabá','Porto Alegre','RS','90880030','51 32311658', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (6344,'121.659.968-80','MARCELO GIULIANO DE OLIVEIRA','1971-06-17','19475453-4','M','CASADO','RAFAEL SOARES DE OLIVEIRA','MARIA  ARAGUES','Rua João Leite de Souza','São José do Rio Preto','SP','15053000','17 32337397', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (6942,'068.325.398-00','CELSO RODRIGUES','1937-10-21','18768659','M','OUTROS','GUMERCINDO RODRIGUES','ONERCIA RODRIGUES','Rua das Glicínias','Campinas','SP','13050064','19 25121291', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (6960,'604.816.338-04','MARIA EMILIA DE OLIVEIRA RODRIGUES','1954-05-18','65915732','F','SOLTEIRO','JOAQUIM PEREIRA RODRIGUES','MARIA CONCEIÇÃO DE OLIVEIRA RODRIGUES','R ARISTIDES DE OLIVEIRA PATRICIO ','TAUBATE','SP','12070230','12 36334980', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7080,'004.226.788-99','EDELY APARECIDA ANASTACIO','1956-09-09','105147989','F','SOLTEIRO','EDGARD ANASTÁCIO','ELVIRA AMORIM ANASTÁCIO','R ARIABU ','SAO PAULO','SP','04806010','11 56690237', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7206,'223.078.868-00','ANTONIA ELIZABETH TRUJILIO GONCALVES','1957-06-12','17520829-3','F','VIUVO','HERMENEGILDO TRUJILIO','ROSA TONELI TRUJILIO','RUA DR JOÃO OLIVEIRA DE FARIA','SÃO JOSÉ DO RIO PRETO','SP','15054040','17 32153177', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7263,'328.422.958-20','VALDIR SOLSI','1948-07-10','8870859-7','M','CASADO','AURELIO SOLSI','CANDIDA VICENTE SOLSI','RUA CLÉLIA','JUNDIAÍ','SP','13216100','11 48170951', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7310,'121.516.881-00','ELCY PEIXOTO DOS SANTOS','1946-01-25','394.408','F','CASADO','FLORIANO PEIXOTO DOS SANTOS','FLORIPEDES BITTENCOURT DOS SANTOS','Quadra SQ 12 Quadra 5','Cidade Ocidental','GO','72880500','61 36255274', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7330,'020.661.478-00','ROSEMEIRE ABRAO ALVES','1957-03-20','13.813.286-0','F','SOLTEIRO','JOÃO APPARECIDO ALVES','VANI CAMPANA  ABRÃO','R JOAO FLORIO ','SOROCABA','SP','18071010','15 30335023', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7367,'044.422.898-59','LUIZ APARECIDO DE ARRUDA','1963-05-22','138135010','F','VIUVO','AGOSTINHO DE ARRUDA','MARLY BUENO DE ARRUDA','RUA  ATANÁZIO SOARES','SOROCABA','SP','18075000','15 30350588', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7415,'145.086.048-62','LUIS HERNANI DA SILVA LINS','1971-07-10','242623189','M','SOLTEIRO','DANIEL DA SILVA LINS','FATIMA TERESA DE MELO LINS','Rua Augusto da Silva','São Paulo','SP','02724090','11 23091246', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7488,'471.688.116-49','IRENE DA CONCEICAO CARDOSO','1958-02-23','184006351','F','VIUVO','LUCINDO TEODORO DA CONCEIÇÃO','DALILA PEREIRA DA CONCEIÇÃO','RUA PROJETADA CINQUENTA','SÃO VICENTE','SP','11347495','13 88053798', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7533,'777.195.498-72','DEGINALDO GUIMARAES MARQUES','1955-04-13','90999435','M','SOLTEIRO','OSTILIO GUIMARÃES SOARES','ALCINA MARQUES SANTOS','Rua Antônio Pires Barbosa','Campinas','SP','13050814','19 25122134', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7539,'175.034.775-04','CREUSA DOS SANTOS CERQUEIRA','1957-01-02','0151227861','F','SOLTEIRO','MANOEL CALIXTO DOS SANTOS','CELESTINA DE SOUZA SANTOS','CAMINHO 13 (CJ JD VALERIA I)','SALVADOR','BA','41307185','71 32179448', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7560,'057.675.848-50','TEREZINHA DE DEUS CARVALHO SANTOS','1942-03-25','64124125','F','VIUVO','BRASILIO JOSE DE DEUS','MARIA DO ROSARIO','R GINIS BARDAZZI ','MOGI DAS CRUZES','SP','08725540','11 47962454', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7735,'014.474.243-87','NOEME CUNHA PEREIRA','1944-09-22','79371','F','SOLTEIRO','BERNARDINO CUNHA','RAIMUNDA NONATA SILVA CUNHA','Rua Demerval Lobão','Teresina','PI','64048100','86 32331914', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7780,'053.963.398-45','MARISA DA SILVA','1957-12-22','110532569','F','CASADO','LIOBINO BATISTA DA SILVA','MARIA SOARES SILVA','Rua Antônio Melato','Jundiaí','SP','13202200','11 48170957', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (7909,'732.727.798-68','VAGNER PAULO GOMES','1953-07-24','8.403.302-2','M','SOLTEIRO','HAROLDO ESTEVAM GOMES','MARIA HELENA MASSA GOMES','Rua Manuel Covas Raia','São Vicente','SP','11380070','13 34649311', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (8189,'121.351.908-02','MERCEDES ASSUNCAO DA SILVA','1957-10-21','11734042X','F','VIUVO','PEDRO ASSUNCAO','MARIA VENINA DE OLIVEIRA','CAM SAO SEBASTIAO ','SANTOS','SP','11088450','13 32991631', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (8257,'367.975.616-04','ROBERTO PEDRO DOS SANTOS','1952-01-08','13.762.886-9','M','CASADO','MANOEL PEDRO DOS SANTOS','TEREZA MARCELINA DE JESUS','R PRIMEIRO DE JANEIRO','TREMEMBE','SP','12120000','12 36744884', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (8318,'121.197.138-47','MARILZA ALVES ROCHA','1957-06-29','21.785.145-9','F','DIVORCIADO','FRANCISCO ALVES ROCHA','NILZA RODRIGUES ROCHA','ALAMEDA DOS LÍRIOS','GUARUJÁ','SP','11432260','13 33576411', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (8507,'102.468.168-80','JOANA BERNADETE DE CAMPOS','1952-10-20','91823602','F','VIUVO','BENEDITO VICENTE','BENEDITA SILVEIRA VICENTE','Rua Projetada Nove','Campinas','SP','13056405','19 32263297', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (8677,'118.701.938-06','CARMEN LUCIA GARCIA MARTINS OLIVEIRA','1949-05-15','4.301.169-X','F','VIUVO','MANOEL EDUARDO MARTINS','DARCY GARCIA MARTINS','RUA VINICIOS DE MORAIS ','REGISTRO','SP','11900000','13 38212302', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (8794,'730.066.028-20','BENEDITO CANDIDO VALERIO','1952-05-25','6.836.609-7','M','CASADO','NAO DECLARADO','SEBASTIANA VALÉRIO','RUA MECANIZADA PAULISTA','SÃO VICENTE','SP','11390630','13 34680766', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (8799,'234.867.839-04','JOSE BORGES DA SILVA','1944-09-12','14.652.166-3','M','CASADO','ABILIO JOSÉ DA SILVA','MARIA  AMELIA DA SILVA','Rua Doutor Antônio Luís Zorze','Jundiaí','SP','13214621','11 39648552', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (8819,'760.293.018-53','APARECIDA CARDOSO','1954-03-14','6884278-8','F','SOLTEIRO','MIGUEL CARDOSO DE SIQUEIRA','IZAURA CRUZ DE SIQUEIRA','RUA OLEGÁRIO HERCULANO(VL DAISY)','São Bernardo do Campo','SP','09732570','11 27582658', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (8882,'815.351.128-91','LOURIVAL GONCALVES DOS SANTOS','1950-05-01','5.532.599-3','M','COMPANHEIRO','GONÇALVES LAURINDO DOS SANTOS','MARIA CARMO SANTOS','RUA ANDIRO LINHARES PENHA','Bertioga','SP','11250000','13 33177526', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (8938,'144.746.798-14','DIRCY DA SILVA EMILIANO DOS SANTOS','1947-02-07','10215408-9','F','CASADO','DOMICIO EMILIANO','CARMEM DA SILVA EMILIANO','Rua Teodora Joaquina de Moura Monteiro','Taubaté','SP','12091540','12 34266617', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (8974,'099.128.218-31','SIMAO DE OLIVEIRA ERVILHA','1966-08-22','18.242.102-8','M','OUTROS','OTACILIO TAVARES DE OLIVEIRA','ANGELINA ERVILHA DE OLIVEIRA','Rua Força Pública','Sorocaba','SP','18061190','15 33571745', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (9035,'046.261.091-87','DELSA PEREIRA DE MOURA MARTINS','1944-04-16','417906','F','OUTROS','DAVI HENRIQUE DE MOURA','RAIMUNDA PEREIRA DE MOURA','Quadra QRSW 7 Bloco A-8','Brasília','DF','70675708','61 30465780', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (9161,'524.052.148-49','HELIO JOSE RIBEIRO','1941-12-08','33002186','M','CASADO','ADRIANO JOSÉ RIBEIRO','ORLANDINA NEVES RIBEIRO','R OLIMPIA CATTA PRETA ','RIBEIRAO PIRES','SP','09424100','11 48241952', 'email@email.com', 1540);
        INSERT INTO cliente (codigo,cpf,nome,dataNascimento,rg,sexo,estadoCivil,pai,mae,endereco,cidade,estado,cep, telefone, email, salario) VALUES (9258,'048.797.198-11','NIVALDO BARBOSA BRAZ','1960-05-25','16.711.327-6','M','CASADO','SEBASTIÃO BRAZ','GERALDA BARBOZA BRAZ','Rua Haiti','São Bernardo do Campo','SP','09671070','11 26309048', 'email@email.com', 1540);

    12. Execute o comando abaixo para dar carga na tabela de clientes:

        mysql -u root -p -h 127.0.0.1 < insertCliente.sql 


Parte 4 - Montagem das APIs
----------------------------

    1. Crie dentro da pasta "Utils" a interface "IRepository" como abaixo:

        namespace MvcDatatable.Web.Utils;

        public interface IRepository<T, K, C> where T : AuditEntity
        {
            Task<int> InsertAsync(C model);
            Task<T> UpdateAsync(C model);
            Task<bool> DeleteAsync(K id);
            Task<T> GetByIdAsync(K id);
            Task<List<T>> GetAllAsync();
            Task<bool> ExistAsync(K id);
        }

    2. Crie a pasta ViewModels.Cliente:

    3. Crie a classe "CreateClienteViewModel.cs" dentro da pasta "ViewModels.Cliente"

        namespace MvcDatatable.Web.ViewModels.Cliente;

        public class CreateClienteViewModel
        {
            public int? Codigo { get; set; }

            [Required(ErrorMessage = "CPF é obrigatório")]
            public string Cpf { get; set; }

            [Required(ErrorMessage = "Nome é obrigatório")]
            [MaxLength(150, ErrorMessage = "Este campo deve ter entre 5 a 150 caracateres")]
            [MinLength(5, ErrorMessage = "Este campo dever ter entre 5 a 150 caracateres")]
            public string Nome { get; set; }

            [Required(ErrorMessage = "Data Nascimento é obrigatório")]
            // [Column("dataNascimento", TypeName = "DATE")]
            public string DataNascimento { get; set; }

            public string Rg { get; set; }

            [Required(ErrorMessage = "Gênero do cliente é obrigatório")]
            public string Sexo { get; set; }

            [Required(ErrorMessage = "Estado Civil é obrigatório")]
            public string EstadoCivil { get; set; }

            [MaxLength(100, ErrorMessage = "Campo Pai deve ter entre 5 a 100 caracateres")]
            [MinLength(5, ErrorMessage = "Campo Pai deve ter entre 5 a 100 caracateres")]
            public string Pai { get; set; }

            [MaxLength(100, ErrorMessage = "Campo Mãe deve ter entre 5 a 100 caracateres")]
            [MinLength(5, ErrorMessage = "Campo Mãe deve ter entre 5 a 100 caracateres")]
            public string Mae { get; set; }

            [Required(ErrorMessage = "Endereço é obrigatório")]
            [MaxLength(100, ErrorMessage = "Endereço deve ter entre 5 a 100 caracateres")]
            [MinLength(5, ErrorMessage = "Endereço deve ter entre 5 a 100 caracateres")]
            public string Endereco { get; set; }

            [Required(ErrorMessage = "Cidade é obrigatório")]
            [MaxLength(50, ErrorMessage = "Cidade deve ter entre 5 a 50 caracateres")]
            [MinLength(5, ErrorMessage = "Cidade deve ter entre 5 a 50 caracateres")]
            public string Cidade { get; set; }

            [Required(ErrorMessage = "Estado é obrigatório")]
            [MaxLength(2, ErrorMessage = "Estado deve ter 2 caracateres")]
            [MinLength(2, ErrorMessage = "Estado deve ter 2caracateres")]
            public string Estado { get; set; }

            [Required(ErrorMessage = "CEP é obrigatório")]
            // [MaxLength(8, ErrorMessage = "Este campo deve ter 8 caracateres")]
            // [MinLength(8, ErrorMessage = "Este campo deve ter 8 caracateres")]
            [StringLength(8, ErrorMessage = "CEP deve ter 8 caracateres")]
            public string Cep { get; set; }

            [Required(ErrorMessage = "Telefone é obrigatório")]
            public string Telefone { get; set; }

            [Required(ErrorMessage = "E-Mail é obrigatório")]
            [EmailAddress(ErrorMessage = "Invalido endereço de E-Mail")]
            [Column("email", TypeName = "VARCHAR(100)")]
            public string Email { get; set; }

            [Required(ErrorMessage = "Salário é obrigatório")]
            [DisplayFormat(DataFormatString = "{0:C}")]
            [Column("salario", TypeName = "DECIMAL(13,2)")]
            public decimal Salario { get; set; }
        }

    4. Crie a classe "ClienteViewModel.cs" dentro da pasta "ViewModels.Cliente"

        namespace MvcDatatable.Web.ViewModels.Cliente;

        public class ClienteViewModel
        {
            public string cpf { get; set; }
            public string nome { get; set; }

        }


    5. Crie dentro da pasta "Models" a interface "IClienteRepository.cs" como abaixo:

        namespace MvcDatatable.Web.Models;

        public interface IClienteRepository: IRepository<Cliente,int, CreateClienteViewModel>
        {
            
        }

    6. Crie dentro da pasta "Models" a classe "ClienteRepository.cs" como abaixo:

        namespace MvcDatatable.Web.Models;

        public class ClienteRepository : IClienteRepository
        {
            private readonly ApplicationDbContext _context;
            public ClienteRepository(ApplicationDbContext context)
            {
                _context = context;
            }

            public Task<bool> DeleteAsync(int id)
            {
                throw new NotImplementedException();
            }

            public Task<bool> ExistAsync(int id)
            {
                throw new NotImplementedException();
            }

            public async Task<List<Cliente>> GetAllAsync()
            {
                var clientes = await _context.Clientes
                                                .AsNoTracking()
                                                .ToListAsync();

                return clientes;
            }

            public Task<Cliente> GetByIdAsync(int id)
            {
                throw new NotImplementedException();
            }

            public async Task<int> InsertAsync(CreateClienteViewModel model)
            {
                // try
                // {
                    var cliente = new Cliente
                    {
                        Cpf = model.Cpf,
                        Nome = model.Nome,
                        DataNascimento = DateTime.Parse(model.DataNascimento),
                        Rg = model.Rg,
                        Sexo = model.Sexo,
                        EstadoCivil = model.EstadoCivil,
                        Pai = model.Pai,
                        Mae = model.Mae,
                        Endereco = model.Endereco,
                        Cidade = model.Cidade,
                        Estado = model.Estado,
                        Cep = model.Cep,
                        Telefone = model.Telefone,
                        Email = model.Email,
                        Salario = model.Salario
                    };

                    await _context.AddAsync( cliente );

                    var savechangesresult = await _context.SaveChangesAsync();

                    return savechangesresult;
                // }
                // catch( Microsoft.EntityFrameworkCore.DbUpdateException ex)
                // {
                    // throw new Exception( ex.Message );
                // }
            }

            public Task<Cliente> UpdateAsync(CreateClienteViewModel model)
            {
                throw new NotImplementedException();
            }

        }

    7. Inclua as linhas abaixo na classe "Program.cs":

        var builder = WebApplication.CreateBuilder(args);

        builder.Services.AddScoped<IClienteRepository, ClienteRepository>();      // Linha inserida

        var connectionString = builder.Configuration.GetConnectionString("DefaultConnection");
        ...
        builder.Services.AddControllersWithViews()                                      // Linha alterada
                        .ConfigureApiBehaviorOptions(options =>        
                                                    {                                                       
                                                        options.SuppressModelStateInvalidFilter = true;     
                                                    }); 
        ...
        app.UseAuthentication();                                                    // Linha inserida
        app.UseAuthorization();                                                         

        app.MapControllerRoute(                                                         
            name: "default",
            pattern: "{controller=Home}/{action=Index}/{id?}");


    8. Crie a pasta "ViewModels" na raiz do projeto.

    9. Crie a classe "ResultViewModel.cs" dentro da pasta "ViewModels" como abaixo:

        namespace MvcDatatable.Web.ViewModels;

        public class ResultViewModel<T>
        {
            public ResultViewModel(T data, List<string> errors)
            {
                Data = data;
                Errors = errors;
            }

            public ResultViewModel(T data)
            {
                Data = data;
            }

            public ResultViewModel(List<string> errors)
            {
                Errors = errors;
            }

            public ResultViewModel(string error)
            {
                Errors.Add(error);
            }
            public T Data { get; private set; }
            public List<string> Errors { get; private set; } = new();
        }

    10. Crie a classe "DataResponse" abaixo na pasta "MvcDatatable.Utils":

        namespace MvcDatatable.Web.Utils;

        public class DataResponse<T>
        {
            public List<T> Data { get; set; }
        }

    11. Configure a injeção de dependência da classe acima no "Program.cs":

        ...
        var builder = WebApplication.CreateBuilder(args);

        builder.Services.AddScoped<IClienteRepository, ClienteRepository>();

        builder.Services.AddScoped<DataResponse<Cliente>>();                    // Linha inserida

        var connectionString = builder.Configuration.GetConnectionString("DefaultConnection");  
        ...


    12. Crie a pasta "Extensions" na raiz do projeto e crie a classe "ModelStateExtension.cs" abaixo:

        using Microsoft.AspNetCore.Mvc.ModelBinding;

        namespace MvcDatatable.Web.Extensions;

        public static class ModelStateExtension
        {
            public static List<string> GetErrors(this ModelStateDictionary modelState)
            {
                var result = new List<string>();
                foreach (var item in modelState.Values)
                    result.AddRange(item.Errors.Select(error => error.ErrorMessage));

                return result;
            }
        }


    13. Crie a pasta "Controllers.Api" e dentro dela a classe "ClienteAPIController.cs" como abaixo:

        namespace MvcDatatable.Web.Controllers.Api;

        [ApiController]
        [Route("[controller]/api/")]
        public class ClienteAPIController : ControllerBase
        {
            private readonly IClienteRepository _clienteRepository;
            // private readonly DataResponse<Cliente> _dataResponse;

            // public ClienteAPIController(IClienteRepository clienteRepository, DataResponse<Cliente> dataResponse)
            public ClienteAPIController(IClienteRepository clienteRepository)
            {
                _clienteRepository = clienteRepository;
                // _dataResponse = dataResponse;
            }

            [HttpGet("v1")]
            public async Task<ActionResult<List<Cliente>>> GetAllAsync()
            {
                try
                {
                    var clientes = await _clienteRepository.GetAllAsync();

                    // _dataResponse.Data = clientes;

                    // return Ok(_dataResponse);

                    return Ok(new
                    {
                        Data = clientes
                    });
                }
                catch (Exception ex)
                {
                    return StatusCode(500, new ResultViewModel<List<Cliente>>($"Ocorreu o seguinte erro [ {ex.Message} ]"));
                }
            }

            [HttpPost("v1")]
            public async Task<ActionResult<Cliente>> PostAsync([FromBody] CreateClienteViewModel model)
            {
                if (!ModelState.IsValid)
                    return BadRequest(new ResultViewModel<Cliente>(ModelState.GetErrors()));

                try
                {
                    var resultRet = await _clienteRepository.InsertAsync(model);

                    if (resultRet > 0)
                    {
                        return Created($"cliente/v1/cpf/{model.Cpf}", new ResultViewModel<CreateClienteViewModel>(model));
                    }
                    else
                    {
                        return StatusCode(500, new ResultViewModel<Cliente>($"Ocorreu o seguinte erro "));  // Linha alterada
                    }

                }
                catch (Exception ex)
                {
                    return StatusCode(500, new ResultViewModel<Cliente>($"Ocorreu o seguinte erro [ {ex.Message} ]"));  // Linha alterada

                }
            }
        }

    14. Acesse a pasta raiz da "Solution" e Levante a aplicação:

        dotnet clean

        dotnet restore

        dotnet build

        dotnet run

    15. Acesse o Postman e execute as URLs abaixo:

        Method: GET
        Url: http://localhost:[porta]/clienteAPI/api/v1


        Method: POST
        Url: http://localhost:[porta]/clienteAPI/api/v1
        Body.raw: 
                {
                    "codigo": null,
                    "cpf": "088.722.138-60",
                    "nome": "CATIA LOUISE F R SILVA",
                    "dataNascimento" : "1964-10-18",
                    "rg" : "15.541.821",
                    "sexo" : "F",
                    "estadoCivil" : "Casada",
                    "pai" : "VITOR FERREIRA ROCHA",
                    "mae" : "ANGELITA FONSECA BARROS FERREIRA ROCHA",
                    "endereco" : "R Carioba 360",
                    "cidade" : "São Paulo",
                    "estado" : "SP",
                    "cep" : "02423100",
                    "telefone" : "11 98336-1336",
                    "email": "catia.louise@gmail.com",
                    "salario": 600.00
                }       
        Type: JSON

    16. Inclua o método abaixo na classe "ClienteRepository":

        ...
        // Método Alterado
        public async Task<Cliente> GetByIdAsync(int id)
        {
            try
            {
                var cliente = await _context.Clientes
                                        .AsNoTracking()
                                        .FirstOrDefaultAsync(x => x.Codigo == id);

                return cliente;
            }
            catch (System.Exception)
            {

                throw;
            }
        }


        ...
        // Método Alterado
        public async Task<Cliente> UpdateAsync(CreateClienteViewModel model)
        {
            var cliente = await _context.Clientes
                                    .AsNoTracking()
                                    .FirstOrDefaultAsync(x => x.Codigo == model.Codigo );

            cliente.Cpf = model.Cpf;
            cliente.Nome = model.Nome;
            cliente.DataNascimento = DateTime.Parse(model.DataNascimento);
            cliente.Rg = model.Rg;
            cliente.Sexo = model.Sexo;
            cliente.EstadoCivil = model.EstadoCivil;
            cliente.Pai = model.Pai;
            cliente.Mae = model.Mae;
            cliente.Endereco = model.Endereco;
            cliente.Cidade = model.Cidade;
            cliente.Estado = model.Estado;
            cliente.Cep = model.Cep;
            cliente.Telefone = model.Telefone;
            cliente.DataAlteracao = DateTime.Now;

            _context.Clientes.Update(cliente);

            await _context.SaveChangesAsync();

            // throw new NotImplementedException();
            return cliente;
        }
        ...

    17. Inclua o método abaixo na classe "ClienteAPIController.cs":

        ...
        [HttpPut("v1/{codigo}")]
        public async Task<ActionResult<Cliente>> Put( [FromBody] CreateClienteViewModel model,
                                                        [FromRoute] int codigo)
        {
            if (!ModelState.IsValid)
                return BadRequest(new ResultViewModel<Cliente>(ModelState.GetErrors()));

            try
            {
                var cliente = await _clienteRepository.GetByIdAsync(codigo);

                if (cliente == null)
                    return NotFound(new ResultViewModel<Cliente>("Cliente não encontrado"));

                cliente = await _clienteRepository.UpdateAsync( model );

                return StatusCode(201, cliente);
            }
            catch (Exception ex)
            {
                return BadRequest(new ResultViewModel<Cliente>(ex.Message));
            }
        }
        ...

    18. Acesse o Postman e execute as URLs abaixo:

        Method: PUT
        Url: http://localhost:[porta]/clienteAPI/api/v1/9262
        Body.raw: 
                {
                    "codigo": 9262,
                    "cpf": "106.523.608-58",
                    "nome": "MARCO ANTONIO SILVA",
                    "dataNascimento" : "1966-10-17",
                    "rg" : "16.531.521",
                    "sexo" : "M",
                    "estadoCivil" : "Casado",
                    "pai" : "LOURIVAL MARINHO SILVA",
                    "mae" : "BENEDITA ABRANTES SILVA",
                    "endereco" : "R Carioba 360",
                    "cidade" : "São Paulo",
                    "estado" : "SP",
                    "cep" : "02423100",
                    "telefone" : "11 98336-1336",
                    "email": "teste@gmail.com",
                    "salario": 1540.00
                }       
        Type: JSON

    19. Execute o projeto na pasta raiz da solution:

        dotnet run --project ./src/MvcDatatable.Web   

    20. Acesse a página do "DataTable" e teste as validações na inclusão:

        http://localhost:[porta]/Cliente/List


    21. Atualize o método "DeleteAsync" com o código abaixo na classe "ClienteRepository":

        ...
        public async Task<bool> DeleteAsync(int id)
        {

            var cliente = await _context.Clientes
                                    .AsNoTracking()
                                    .FirstOrDefaultAsync(x => x.Codigo == id );

            _context.Clientes.Remove(cliente);

            await _context.SaveChangesAsync();

            return true;
        }
        ...

    22. Atualize o método "Delete" com o código abaixo na classe "ClienteAPIController":

        ...
        [HttpDelete("v1/{codigo}")]
        public async Task<ActionResult> Delete([FromRoute] int codigo)
        {
            try
            {
                var cliente = await _clienteRepository.GetByIdAsync(codigo);

                if (cliente == null)
                    return NotFound(new ResultViewModel<Cliente>("Cliente não encontrado"));

                await _clienteRepository.DeleteAsync( codigo );

                return NoContent();
            }
            catch (Exception ex)
            {
                return BadRequest(new ResultViewModel<Cliente>(ex.Message));
            }
        }
        ...

    23. Acesse o Postman e execute as URLs abaixo:

        Method: DELETE
        Url: http://localhost:[porta]/clienteAPI/api/v1/9262


    24. Adicionando o Swagger na aplicação:

        . Execute o comando abaixo na pasta do projeto "MvcDatatable.Web":

            dotnet add package Swashbuckle.AspNetCore --version 6.6.2

        . Acesse o arquivo "Program.cs" e implemente as linhas abaixo:

            ...
            builder.Services.AddDbContext<ApplicationDbContext>(options =>                         
                options.UseMySql(connectionString, ServerVersion.AutoDetect(connectionString)));

            // Add services to the container.
            builder.Services.AddControllersWithViews()                                      
                            .ConfigureApiBehaviorOptions(options =>
                                                        {
                                                            options.SuppressModelStateInvalidFilter = true;
                                                        });

            builder.Services.AddEndpointsApiExplorer();         // Linha inserida
            builder.Services.AddSwaggerGen();                   // Linha inserida


            var app = builder.Build();

            // Configure the HTTP request pipeline.
            if (!app.Environment.IsDevelopment())
            {
                app.UseExceptionHandler("/Home/Error");
                // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
                app.UseHsts();
            }
            else                                                // Linha inserida
            {
                app.UseSwagger();                               // Linha inserida
                app.UseSwaggerUI();                             // Linha inserida

            }
            ...

        . Acesse o link abaixo e verifique se o Swagger está funcionando:

            http://localhost:[porta]/swagger/index.html

        . Expanda o item "GET" "/ClienteAPI/api/v1", clique em "Try it out" e no botão "Execute": 

        . Expanda o item "POST" "/ClienteAPI/api/v1", clique em "Try it out" e altere os parâmetro como abaixo:

            . Insira o conteúdo abaixo no campo "Resquest Body"

                {
                    "cpf": "106.523.608-58",
                    "nome": "MARCO ANTONIO SILVA",
                    "dataNascimento" : "1966-10-17",
                    "rg" : "16.531.521",
                    "sexo" : "M",
                    "estadoCivil" : "Casado",
                    "pai" : "LOURIVAL MARINHO SILVA",
                    "mae" : "BENEDITA ABRANTES SILVA",
                    "endereco" : "R Carioba 360",
                    "cidade" : "São Paulo",
                    "estado" : "SP",
                    "cep" : "02423100",
                    "telefone" : "11 98336-1336"
                }     

            . Clique no botão "Execute"

Parte 5 - Criando página web utilizando  Datatable JQuery com paginação no client
---------------------------------------------------------------------------------

    1. Crie o controller "ClienteController.cs" abaixo dentro da pasta "Controllers":

        using Microsoft.AspNetCore.Mvc;

        namespace MvcDatatable.Web.Controllers; 

        public class ClienteController : Controller
        {

            private readonly IClienteRepository _clienteRepository;

            public ClienteController(IClienteRepository clienteRepository)
            {
                _clienteRepository = clienteRepository;
            }


            public IActionResult List()
            {
                return View();
            }
        }

    2. Crie a pasta "Views/Cliente" e dentro dela a view abaixo  "List.cshtml":

        @{
            ViewData["Title"] = "Cadastro de Clientes";
        }

        @section Links {
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/datatables.net-bs5/2.1.0/dataTables.bootstrap5.css">
            <link rel="stylesheet" href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css">


            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
            <link
                href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
                rel="stylesheet">
            <link rel="stylesheet" href="https://cdn.datatables.net/buttons/3.1.0/css/buttons.dataTables.css">
            <link rel="stylesheet" href="https://cdn.datatables.net/2.1.2/css/dataTables.dataTables.css">
        }

        <div class="col-md-12"> 
            <div class="card shadow">
                <div class="card-header py-3">
                    <h5 class="m-0 font-weight-bold">Cadastro de Clientes</h5>
                </div>

                <div class="card-body mx-0 px-0"> 
                    <div class="px-1 py-1">
                        <table id="clienteTable" class="table table-bordered table-striped table-hover responsive" width="100%">
                            <thead class="thin-border-bottom">
                                <tr>
                                    <th>CPF</th>
                                    <th>Nome</th>
                                    <th>Endereço</th>
                                    <th>Cidade</th>
                                    <th>UF</th>
                                    <th>Telefone</th>
                                    <th>&nbsp;</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        @section Scripts {
            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/datatables.net-bs5/2.1.0/dataTables.bootstrap5.min.js"></script>
            <script src="~/js/index.js"></script>
        }

    3. Crie a pasta "/wwwroot/image" e insira dois icones/imagens, um para edição e outro para deleção:

        . Localize no google imagens "jpeg" com tamanho pequeno

    4. Crie o arquivo "index.js" dentro da pasta "wwwwroot/js" com o conteúdo abaixo:

        $(document).ready(function () {
            $('#clienteTable').DataTable({
                processing: true,
                destroy: true,
                scrollY: "369px",
                // scrollX: true,
                // scrollCollapse: true,
                select: true,
                sAjaxDataProp: "data",
                info: false,
                language: {
                    decimal: ",",
                    thousands: "."
                },
                pagingType: "full_numbers",
                language: {
                    // url : "../docs/portuguese.json"
                    "url": "/js/Portuguese.json"
                },
                sPaginationType: "bootstrap",
                contentType: "application/json; charset=utf-8",
                aLengthMenu: [[7, 10, 20, 100, -1],
                [7, 10, 20, 100, "Todos"]],
                pageLength: 7,
                lengthChange: true,
                ajax: {
                    url: '/ClienteAPI/api/v1', // Replace with your ASP.NET API endpoint
                    type: 'GET'
                },
                columns: [
                    { data: 'cpf', width: "12%", className: "dt-center" },
                    { data: 'nome', width: "25%" },
                    { data: 'endereco', width: "20%" },
                    { data: 'cidade', width: "15%" },
                    { data: 'estado', width: "5%" },
                    { data: 'telefone', width: "13%" },
                    {
                        data: null,
                        width: "10%",
                        render: function (data, type, row) {
                            return '<a href="#" data-id="' + row.codigo + '" class="editBtn"><img src="/image/Edit-Button.jpg"   alt="Editar"  width="30" height="30"></a>&nbsp&nbsp&nbsp' +
                                '<a href="#" data-id="' + row.codigo + '" class="deleteBtn"><img src="/image/Delete-Button.jpg" alt="Excluir" width="30" height="30"></a>';
                            // '<button class="btn btn-outline-primary btn-sm editBtn" data-id="' + row.id + '">Edit</button>' +
                            // '<button class="btn btn-outline-danger btn-sm deleteBtn" data-id="' + row.id + '">Delete</button>' +                        
                        }
                    }
                ],
                "columnDefs": [{
                    "className": "small",
                    "targets": "_all"
                }        ],
                colReorder: true

            });
        });

    5. Crie o arquivo "Portuguese.json" dentro da pasta "wwwwroot/js" com o conteúdo abaixo:

        {
            "sProcessing":   "Carregando...",
            "sLengthMenu":   "Mostrar _MENU_ registos",
            "sZeroRecords":  "Não foram encontrados resultados",
            "sInfo":         "Mostrando de _START_ até _END_ de _TOTAL_ registos",
            "sInfoEmpty":    "Mostrando de 0 até 0 de 0 registos",
            "sInfoFiltered": "(filtrado de _MAX_ registos no total)",
            "sInfoPostFix":  "",
            "sSearch":       "Procurar:",
            "sUrl":          "",
            "oPaginate": {
                "sFirst":    "Primeiro",
                "sPrevious": "Anterior",
                "sNext":     "Seguinte",
                "sLast":     "Último"
            }
        }    

    6. Acrescente o link na página principal, alterando o arquivo "_Layout.cshtml" da pasta "Views/Shared" como abaixo:

        ...
        <head>
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <title>@ViewData["Title"] - MVC Datatable</title>

            <!-- Linha Eliminada -->
            @* <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" /> *@

            <!-- Linha Inserida -->
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.0.1/css/bootstrap.min.css" integrity="sha512-Ez0cGzNzHR1tYAv56860NLspgUGuQw16GiOOp/I2LuTmpSK9xDXlgJz3XN4cnpXWDmkNBKXR/VDMTCnAaEooxA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

            <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
            <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
            <link rel="stylesheet" href="~/MvcDatatable.Web.styles.css" asp-append-version="true" />
            
            
            @* Seção Incluída *@
            @await RenderSectionAsync("Links", required: false)


        </head>
        <body>
            <header>
                <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
                    <div class="container-fluid">
                        <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">MvcDatatable.Web</a>
                        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                                aria-expanded="false" aria-label="Toggle navigation">
                            <span class="navbar-toggler-icon"></span>
                        </button>
                        <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                            <ul class="navbar-nav flex-grow-1">
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                                </li>



                                @* Link Incluido *@
                                
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Cliente" asp-action="List">Clientes</a>
                                </li>


                            </ul>
                        </div>
                    </div>
                </nav>
            </header>

            
            <!-- Linha Alterada (Alterado p/"container-fluid") -->

            <div class="container-fluid">
                <main role="main" class="pb-3">
                    @RenderBody()
                </main>
            </div>

            ...
        </body>
       
        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script src="~/js/site.js" asp-append-version="true"></script>


        @* Seção alterada *@
        @await RenderSectionAsync("Scripts", required: false)


        </html>

    7. Execute o projeto na pasta raiz da solution:

        dotnet run --project ./src/MvcDatatable.Web   

    8. Acesse a página "Cliente" e teste:

        http://localhost:[porta]/Cliente/List



Parte 6 - Criando página web utilizando  Datatable JQuery com paginação no server
---------------------------------------------------------------------------------

    . Insira e altere as linhas abaixo no arquivo "wwwroot/js/index.js":

        $(document).ready(function () {
            $('#clienteTable').DataTable({
                processing: true,
                serverSide: true,                                           // Linha inserida
                destroy: true,
                scrollY: "369px",
                scrollX: true,
                scrollCollapse: true,
                select: true,
                sAjaxDataProp: "data",
                info: false,
                language: {
                    decimal: ",",
                    thousands: "."
                },
                pagingType: "full_numbers",
                language: {
                    // url : "../docs/portuguese.json"
                    "url": "/js/Portuguese.json"
                },
                sPaginationType: "bootstrap",
                contentType: "application/json; charset=utf-8",
                aLengthMenu: [[8, 10, 20, 100, -1],
                [8, 10, 20, 100, "Todos"]],
                pageLength: 10,
                lengthChange: true,
                ajax: {
                    url: '/ClienteAPI/api/pageable/v1',          // Linha alterada
                    type: 'POST'                                // Linha alterada
                //    data: function (d) {
                //        // Add any additional parameters you need to send to the server
                //        d.draw = d.draw;
                //        d.start = d.start;
                //        d.length = d.length;
                //        d.search = d.search;
                //        return d;
                //    }

                },
                columns: [
                    { data: 'cpf', width: "10%", className : "dt-center" },
                    { data: 'nome', width: "25%"},
                    { data: 'endereco', width: "20%" },
                    { data: 'cidade', width: "15%" },
                    { data: 'estado', width: "5%" },
                    { data: 'telefone', width: "15%" },
                    {
                        data: null,
                        width: "8%",
                        render: function (data, type, row) {
                            return '<a href="#" data-id="' + row.codigo + '" class="editBtn"><img src="/image/Edit-Button.jpg"   alt="Editar"  width="30" height="30"></a>&nbsp&nbsp&nbsp' +
                                '<a href="#" data-id="' + row.codigo + '" class="deleteBtn"><img src="/image/Delete-Button.jpg" alt="Excluir" width="30" height="30"></a>';
                                // '<button class="btn btn-outline-primary btn-sm editBtn" data-id="' + row.id + '">Edit</button>' +
                                // '<button class="btn btn-outline-danger btn-sm deleteBtn" data-id="' + row.id + '">Delete</button>' +                        
                        }
                    }
                ],
                "columnDefs": [{
                    "className": "small",
                    "targets": "_all"
                }        ],
                colReorder: true

            });
        });

    . Crie a classe "DataTableRequest" na pasta "MvcDatatable.Web.Utils" com o conteúdo abaixo:

        namespace MvcDatatable.Web.Utils;

        public class DataTableRequest
        {
            public int Draw { get; set; }
            public int Start { get; set; }
            public int Length { get; set; }
            public string Search { get; set; }
            public Order Order { get; set; }

            public DataTableRequest(HttpRequest request)
            {
                Draw = Convert.ToInt32(request.Form["draw"].FirstOrDefault());
                Start = Convert.ToInt32(request.Form["start"].FirstOrDefault());
                Length = Convert.ToInt32(request.Form["length"].FirstOrDefault());

                Search = request.Form["search[value]"].FirstOrDefault() != null ? request.Form["search[value]"].FirstOrDefault() : "";

                var order =
                    new Order()
                    {
                        Dir = request.Form["order[0][dir]"].FirstOrDefault(),
                        Column = Convert.ToInt32(request.Form["order[0][column]"].FirstOrDefault())
                    };

                Order = order;
            }
        }

        public class Order
        {
            public int Column { get; set; }
            public string Dir { get; set; }
        }

    . Crie a classe "DataTableResponse" na pasta "MvcDatatable.Web.Utils" com o conteúdo abaixo:

        namespace MvcDatatable.Web.Utils;

        public class DataTableResponse<T>
        {
            public int Draw { get; set; }
            public int RecordsTotal { get; set; }
            public int RecordsFiltered { get; set; }
            public List<T> Data { get; set; }
        }

    . Insira o método abaixo na interface "IRepository":

        ...
        Task<List<T>> GetAllPagebleAsync(DataTableRequest dataTableRequest, DataTableResponse<T> dataTableResponse);
        ...

    . Insira o método abaixo na classe "ClienteRepository":

        ...
        public async Task<List<Cliente>> GetAllPagebleAsync(DataTableRequest dataTableRequest, DataTableResponse<Cliente> dataTableResponse)
        {

            var clientes = await _context.Clientes
                                            .AsNoTracking()
                                            .ToListAsync();

            var totalRecords = clientes.Count();
            var clientesCount = clientes.Count();

            if ((dataTableRequest.Search != "")
                && (dataTableRequest.Search != null))
            {
                clientes = clientes.Where(x => x.Nome.Contains(dataTableRequest.Search) ||
                                                                x.Cpf.Contains(dataTableRequest.Search))
                                    .ToList();
            };

            switch (dataTableRequest.Order.Column)
            {
                case 0: // Cpf
                    clientes = dataTableRequest.Order.Dir == "asc" ? clientes.OrderBy(c => c.Cpf).ToList() : clientes.OrderByDescending(c => c.Cpf).ToList();
                    break;
                case 1: // Nome
                    clientes = dataTableRequest.Order.Dir == "asc" ? clientes.OrderBy(c => c.Nome).ToList() : clientes.OrderByDescending(c => c.Nome).ToList();
                    break;
                case 2: // Endereco
                    clientes = dataTableRequest.Order.Dir == "asc" ? clientes.OrderBy(c => c.Endereco).ToList() : clientes.OrderByDescending(c => c.Endereco).ToList();
                    break;
                case 3: // Cidade
                    clientes = dataTableRequest.Order.Dir == "asc" ? clientes.OrderBy(c => c.Cidade).ToList() : clientes.OrderByDescending(c => c.Cidade).ToList();
                    break;
                case 4: // UF
                    clientes = dataTableRequest.Order.Dir == "asc" ? clientes.OrderBy(c => c.Estado).ToList() : clientes.OrderByDescending(c => c.Estado).ToList();
                    break;
                case 5: // Telefone
                    clientes = dataTableRequest.Order.Dir == "asc" ? clientes.OrderBy(c => c.Telefone).ToList() : clientes.OrderByDescending(c => c.Telefone).ToList();
                    break;
            }

            // Pagination
            clientes = clientes.Skip(dataTableRequest.Start).Take(dataTableRequest.Length).ToList();

            dataTableResponse.Draw = dataTableRequest.Draw;
            dataTableResponse.RecordsTotal = totalRecords;
            dataTableResponse.RecordsFiltered = clientesCount;
            dataTableResponse.Data = clientes;

            return clientes;
        }
        ...

    . Crie o método abaixo na classe "ClienteAPIController":

        ...
        [HttpPost("pageable/v1")]
        public async Task<ActionResult<List<Cliente>>> GetAllPagebleAsync() // [FromQuery] DataTableRequest request)
        {
            try
            {

                var dataTableRequest = new DataTableRequest( Request );
                var dataTableResponse = new DataTableResponse<Cliente>();

                var clientes = await _clienteRepository.GetAllPagebleAsync( dataTableRequest, dataTableResponse );

                return Ok(dataTableResponse);
            }
            catch (Exception ex)
            {
                return StatusCode(500, new ResultViewModel<List<Cliente>>($"Ocorreu o seguinte erro [ {ex.Message} ]"));
            }
        }
        ...

    . Execute o projeto na pasta raiz da solution:

        dotnet run --project ./src/MvcDatatable.Web   

    . Acesse a página do "DataTable" e teste a paginação:

        http://localhost:[porta]/Cliente/List


// PAREI AQUI


Parte 7. Escalando o uso do "DataTable"
---------------------------------------

    . Insira o código javascript abaixo na página "List.cshtml"

        ...
        @section Scripts {
            <!--    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script> -->
            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
            @* <script src="https://cdnjs.cloudflare.com/ajax/libs/datatables.net-bs5/2.1.0/dataTables.bootstrap5.min.js"></script> *@
            <script src="https://cdnjs.cloudflare.com/ajax/libs/datatables.net-bs5/2.0.1/dataTables.bootstrap5.min.js"></script>    
            <script src="~/js/index.js"></script>

            <script src="~/js/cliente.js"></script>

            <script>
                LoadDataTable('clienteTable',
                    7,
                    {
                        url: '/ClienteAPI/api/pageable/v1',
                        type: 'POST'
                    },
                    [{ data: 'cpf', width: "12%", className: "dt-center" },
                    { data: 'nome', width: "25%" },
                    { data: 'endereco', width: "20%" },
                    { data: 'cidade', width: "15%" },
                    { data: 'estado', width: "5%" },
                    { data: 'telefone', width: "13%" },
                    {
                        data: '',
                        width: "10%",
                        render: function (data, type, row) {
                            return '<a href="#" data-id="' + row.codigo + '" class="editBtn"><img src="/image/Edit-Button.jpg"   alt="Editar"  width="30" height="30"></a>&nbsp&nbsp&nbsp' +
                                '<a href="#" data-id="' + row.codigo + '" class="deleteBtn"><img src="/image/Delete-Button.jpg" alt="Excluir" width="30" height="30"></a>';
                        }
                }]);
            </script>

        }


    Melhorar a apresentação do botões (print, excel, etc) no tutorial, retirá-los abaixo e colocar num tópico próprio.
    Testar a inclusão dos botões conforme video https://www.youtube.com/watch?v=4aajwYY2NxI&list=WL



    . Altere o arquivo "wwwroot/js/index.js" como abaixo:

        const LoadDataTable = (tableId, pageLength, ajaxConfig, columnConfig) => {
            var table;

            $(document).ready(function () {
                table = $('#' + tableId).DataTable({
                    processing: true,
                    serverSide: true,                                           // Linha inserida
                    destroy: false,
                    searching: true,
                    ordering: true,
                    paging: true,
                    dom: 'Blfrtip',
                    // dom: 'Blp',
                    buttons: [{ extend: 'print', text: 'Imprimir' },
                                { extend: 'copy', text: 'Copy to clipboard' },
                                { extend: 'pdf', text: 'Criar PDF' },
                                { extend: 'excel', text: 'Excel' },
                                { extend: 'csv', text: 'Exportar para Excel' }
                    ],
                    layout:{
                        topEnd: {
                            search: {
                                placeholder: 'Pelo CPF, ou Nome...'
                            }
                        }
                    },
                    // layout: {
                        // topStart: {
                        //     pageLength: {
                        //         menu: [ 7, 25, 50, 100 ]
                        //     }
                        // },
                        // top1B: $('<div class="toolbar"><a href="#"><img src="/image/Edit-Button.jpg"   alt="Editar"  width="30" height="30"></a></div>'),
                        // topStart: "pageLength",
                        // topEnd: {
                        //     search: {
                        //         placeholder: 'Pelo CPF, ou Nome...'
                        //     }
                        // },
                        // bottomStart: {
                        //     buttons: {
                        //         buttons: [ 'copy', 'csv', 'excel' ]
                        //     }
                        // },
                        // bottomStart: {
                        //     paging: {
                        //         buttons: 6
                        //     }
                        // }
                    // },
                    scrollY: "320px",
                    // scrollX: true,
                    // scrollCollapse: true,
                    select: true,
                    sAjaxDataProp: "data",
                    info: false,
                    language: {
                        decimal: ",",
                        thousands: "."
                    },
                    pagingType: "full_numbers",
                    language: {
                        "url": "/js/Portuguese.json"
                    },
                    sPaginationType: "bootstrap",
                    contentType: "application/json; charset=utf-8",
                    aLengthMenu: [[pageLength, 10, 20, 100, -1],
                    [pageLength, 10, 20, 100, "Todos"]],
                    pageLength: pageLength,
                    lengthChange: true,
                    ajax: ajaxConfig,
                    columns: columnConfig,
                    "columnDefs": [{
                        "className": "small",
                        "targets": "_all"
                    }]
                    // colReorder: true

                });

            });
        }

    . Crie o arquivo "wwwroot/js/cliente.js" como abaixo:

        // Adiciona novo cliente pelo click do botão
        $('#btnAdd').click(function () {
            $('#formModal').modal('show');
            $('#clienteForm')[0].reset(); // Clear the form
            $('#formModalLabel').text('Inclusão');
            $('#btnSave').text('Salvar');
            $('#codigo').val(''); // Clear the hidden ID field
        });

        // Save o cliente pelo click do botão
        $('#btnSave').click(function () {
            if (!validaCPF( $('#cpf').val() )) {
                alert('CPF inválido. Verifique o número digitado.');
                $('#cpf').focus();

                return;
            }

            var url = $('#codigoCliente').val().trim() === '' ?
                '/clienteAPI/api/v1' :
                '/clienteAPI/api/v1/' + $('#codigoCliente').val().trim(); // Linha alterada
            var method = $('#codigoCliente').val().trim() === '' ? 'POST' : 'PUT';
            var sendInfo = {
                codigo: $('#codigoCliente').val().trim() === '' ? null : $('#codigoCliente').val(),
                cpf: $('#cpf').val(),
                nome: $('#nome').val(),
                dataNascimento: $('#dataNascimento').val(),
                rg: $('#rg').val(),
                sexo: $('#sexo').val(),
                estadoCivil: $('#estadoCivil').val(),
                pai: $('#pai').val(),
                mae: $('#mae').val(),
                endereco: $('#endereco').val(),
                cidade: $('#cidade').val(),
                estado: $('#estado').val(),
                cep: $('#cep').val(),
                telefone: $('#telefone').val(),

            };

            $.ajax({
                url: url,
                type: method,
                data: JSON.stringify(sendInfo),
                contentType: "application/json; charset=utf-8",
                success: function () {
                    alert('Cliente incluido com sucesso!!!');
                    $('#formModal').modal('hide');
                    $('#clienteTable').DataTable().ajax.reload();
                },
                error: function (request, status, error) {
                    alert(request.responseText);
                }
            });
        });

    . Crie o arquivo "_ClienteModal.cshtml" dentro da pasta "Views/Shared" com o conteúdo abaixo:

        <!-- Modal for adding/editing customers -->
        <div class="modal fade" id="formModal" tabindex="-1" role="dialog" aria-labelledby="formModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="formModalLabel">Detalhes</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="clienteForm">
                            <input type="hidden" id="codigoCliente" name="codigoCliente">

                            <div class="row">
                                <div class="col-3">
                                    <div class="form-group">
                                        <label for="cpf">CPF</label>
                                        <input type="text" class="form-control form-control-sm"
                                            aria-label=".form-control-sm example" 
                                            placeholder="123.456.789-00" 
                                            id="cpf" 
                                            name="cpf"
                                            required>
                                    </div>
                                </div>
                                <div class="col-9">
                                    <div class="form-group">
                                        <label for="nome">Nome</label>
                                        <input type="text" class="form-control form-control-sm" id="nome" name="nome" required>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div class="form-group">
                                        <label for="endereco">Endereço</label>
                                        <input type="text" class="form-control form-control-sm" id="endereco" name="endereco"
                                            required>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <div class="form-group">
                                        <label for="cidade">Cidade</label>
                                        <input type="text" class="form-control form-control-sm" id="cidade" name="cidade"
                                            required>
                                    </div>
                                </div>
                                <div class="col-2">
                                    <div class="form-group">
                                        <label for="estado">UF</label>
                                        <select class="form-select form-select-sm" aria-label=".form-select-sm example"
                                            id="estado" name="estado" required>
                                            <option value="" selected>Selecione</option>
                                            <option value="AC">Acre</option>
                                            <option value="AL">Alagoas</option>
                                            <option value="AP">Amapá</option>
                                            <option value="AM">Amazonas</option>
                                            <option value="BA">Bahia</option>
                                            <option value="CE">Ceará</option>
                                            <option value="DF">Distrito Federal</option>
                                            <option value="ES">Espírito Santo</option>
                                            <option value="GO">Goiás</option>
                                            <option value="MA">Maranhão</option>
                                            <option value="MT">Mato Grosso</option>
                                            <option value="MS">Mato Grosso do Sul</option>
                                            <option value="MG">Minas Gerais</option>
                                            <option value="PA">Pará</option>
                                            <option value="PB">Paraíba</option>
                                            <option value="PR">Paraná</option>
                                            <option value="PE">Pernambuco</option>
                                            <option value="PI">Piauí</option>
                                            <option value="RJ">Rio de Janeiro</option>
                                            <option value="RN">Rio Grande do Norte</option>
                                            <option value="RS">Rio Grande do Sul</option>
                                            <option value="RO">Rondônia</option>
                                            <option value="RR">Roraima</option>
                                            <option value="SC">Santa Catarina</option>
                                            <option value="SP">São Paulo</option>
                                            <option value="SE">Sergipe</option>
                                            <option value="TO">Tocantins</option>
                                            <option value="EX">Estrangeiro</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-2">
                                    <div class="form-group">
                                        <label for="cep">CEP</label>
                                        <input type="text" class="form-control form-control-sm" id="cep" name="cep" required>
                                    </div>
                                </div>
                                <div class="col-2">
                                    <div class="form-group">
                                        <label for="sexo">Sexo</label>
                                        @* <input type="text" class="form-control form-control-sm" id="sexo" name="sexo"
                                        required> *@
                                        <select class="form-select form-select-sm" aria-label=".form-select-sm example"
                                            id="sexo" name="sexo" required>
                                            <option value="" selected>Selecione</option>
                                            <option value="1">Masculino</option>
                                            <option value="2">Feminino</option>
                                            <option value="3">Outros</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-3">
                                    <div class="form-group">
                                        <label for="telefone">Telefone</label>
                                        <input type="tel" class="form-control form-control-sm" id="telefone" name="telefone"
                                            required>
                                    </div>
                                </div>
                                <div class="col-2">
                                    <div class="form-group">
                                        <label for="rg">RG</label>
                                        <input type="text" class="form-control form-control-sm" id="rg" name="rg" required>
                                    </div>
                                </div>
                                <div class="col-3">
                                    <div class="form-group">
                                        <label for="email">Email</label>
                                        <input type="email" class="form-control form-control-sm" id="email" name="email"
                                            aria-describedby="emailHelp" placeholder="Seu email" required>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="form-group">
                                        <label for="estadoCivil">Estado Civil</label>
                                        <select class="form-select form-select-sm" aria-label=".form-select-sm example"
                                            id="estadoCivil" name="estadoCivil" required>
                                            <option value="" selected>Selecione</option>
                                            <option value="CASADO">Casado</option>
                                            <option value="SOLTEIRO">Solteiro</option>
                                            <option value="OUTROS">Outro</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-5">
                                    <div class="form-group">
                                        <label for="pai">Nome do Pai</label>
                                        <input type="text" class="form-control form-control-sm" id="pai" name="pai" required>
                                    </div>
                                </div>
                                <div class="col-5">
                                    <div class="form-group">
                                        <label for="mae">Nome da Mãe</label>
                                        <input type="text" class="form-control form-control-sm" id="mae" name="mae" required>
                                    </div>
                                </div>
                                <div class="col-2">
                                    <div class="form-group">
                                        <label for="dataNascimento">Data Nasc</label>
                                        <input type="date" class="form-control form-control-sm" id="dataNascimento"
                                            name="dataNascimento" required>
                                    </div>
                                </div>
                            </div>

                            @* 
                            <div class="row">
                                <div class="col-3">
                                    <div class="form-group">
                                        <label for="salario">Salário</label>
                                        <input type="text" class="form-control form-control-sm" name="salario" id="salario">
                                    </div>
                                </div>

                            </div>
                            @*

                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                        <button type="button" class="btn btn-primary" id="btnSave">Salvar</button>
                    </div>
                </div>
            </div>
        </div>

    . Inclua a Partial View "_ClienteModal" na página "List.cshtml" como abaixo:

        ...
        <partial name="_ClienteModal" />     <!-- Linha inserida -->

        @section Scripts {
            ...
        }


    . Execute o projeto na pasta raiz da solution:

        dotnet run --project ./src/MvcDatatable.Web   

    . Acesse a página do "DataTable" e teste o comportamento da funcionalidade se ficou como era antes:

        http://localhost:[porta]/Cliente/List

    . Colocando mascara no campos da tela de edição:

        . Adicione a função abaixo no arquivo "index.js":

            ...
            // Remover qq caractere diferente de número
            function removeNonNumeric(str) {
                return str.replace(/\D/g, '');
            }

            // Validação do CPF
            function validaCPF(cpf) {
                cpf = removeNonNumeric(cpf);
                if (cpf.length !== 11) return false;

                let soma = 0;
                let resto;
                if (/^(\d)\1{10}$/.test(cpf)) return false;

                for (let i = 1; i <= 9; i++) soma += parseInt(cpf.substring(i-1, i)) * (11 - i);
                resto = (soma * 10) % 11;
                if ((resto === 10) || (resto === 11)) resto = 0;
                if (resto !== parseInt(cpf.substring(9, 10))) return false;

                soma = 0;
                for (let i = 1; i <= 10; i++) soma += parseInt(cpf.substring(i-1, i)) * (12 - i);
                resto = (soma * 10) % 11;
                if ((resto === 10) || (resto === 11)) resto = 0;
                if (resto !== parseInt(cpf.substring(10, 11))) return false;

                return true;
            }

        . Adicione as linhas abaixo no arquivo "List.cshtml":

            ...
            <!-- Linhas incluidas -->
            <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-maskmoney/3.0.2/jquery.maskMoney.min.js"></script>
            <!-- Fim -->

            <script src="~/js/index.js"></script>
            <script src="~/js/cliente.js"></script>


        . Inclua e altere o código abaixo no arquivo "cliente.js":

            // Bloco incluido
            $(document).ready(function(){
                $("#cpf").mask("000.000.000-00");
                $("#telefone").mask("(00) 00000-0000");
                // $("#salario").mask("999.999.990,00", {reverse: true});
                $("#cep").mask("00000-000");
                
                $("#rg").mask("999.999.999-W", {
                    translation: {
                        'W': {
                            pattern: /[X0-9]/
                        }
                    },
                    reverse: true
                });

                $("#telefone").blur(function(event){
                    if ($(this).val().length == 15){
                        $("#telefone").mask("(00) 00000-0009")
                    }else{
                        $("#telefone").mask("(00) 0000-00009")
                    }
                });

                $('#salario').maskMoney({ prefix: 'R$ ', allowNegative: false, thousands: '.', decimal: ',',symbolStay: true,  affixesStay: true });

            });
            // FIM


            // Add New Customer Button Click
            $('#btnAdd').click(function () {
                $('#formModal').modal('show');
                ...


            // Save/Update Customer Button Click
            $('#btnSave').click(function () {
                var url = '/clienteAPI/api/v1'; // customerId ? 'api/customers/' + customerId : 'api/customers'; // Update or Create
                var method = $('#codigoCliente').val().trim() == '' ? 'POST' : 'PUT';
                var sendInfo = {
                    codigo: $('#codigoCliente').val().trim() == '' ? null : $('#codigoCliente').val(),
                    cpf: $('#cpf').val(),
                    nome: $('#nome').val(),
                    dataNascimento: $('#dataNascimento').val(),         // Linha alterada
                    rg: removeNonNumeric( $('#rg').val() ),             // Linha alterada
                    sexo: $('#sexo').val(),
                    estadoCivil: $('#estadoCivil').val(),
                    pai: $('#pai').val(),
                    mae: $('#mae').val(),
                    endereco: $('#endereco').val(),
                    cidade: $('#cidade').val(),
                    estado: $('#estado').val(),
                    cep: removeNonNumeric($('#cep').val()),             // Linha alterada
                    telefone: removeNonNumeric( $('#telefone').val() )  // Linha alterada
                };

                ...
            });

    . Execute o projeto na pasta raiz da solution:

        dotnet run --project ./src/MvcDatatable.Web   

    . Acesse a página do "DataTable" e teste as mascaras na inclusão:

        http://localhost:[porta]/Cliente/List



Parte 8. Realizando a validação dos campos
------------------------------------------

    . Utilizando os recursos do Bootstrap:

        . Apague no "cliente.js" a função "click" do "#btnSave", o código contido neste evento foi movido para a função "Save" abaixo:

            // $('#btnSave').click(function () {
            //    ...
            // });

        . Inclua o código abaixo no arquivo "cliente.js":

            $(document).ready(function(){
                $("#cpf").mask("000.000.000-00");
                $("#telefone").mask("(00) 00000-0000");
                // $("#salario").mask("999.999.990,00", {reverse: true});
                $("#cep").mask("00000-000");
                
                $("#rg").mask("999.999.999-W", {
                    translation: {
                        'W': {
                            pattern: /[X0-9]/
                        }
                    },
                    reverse: true
                });

                $("#telefone").blur(function(event){
                    if ($(this).val().length == 15){
                        $("#telefone").mask("(00) 00000-0009")
                    }else{
                        $("#telefone").mask("(00) 0000-00009")
                    }
                });

                $('#salario').maskMoney({ prefix: 'R$ ', allowNegative: false, thousands: '.', decimal: ',',symbolStay: true,  affixesStay: true });



                // Evento incluido
                $('#salario').on('focus', function() {  
                    $(this).select();
                });  


                // Função incluida
                // Função associada ao Bootstrap para fazer o efeito de validação dos campos
                (function () {
                    'use strict';
                    var form = document.getElementById('clienteForm');
                    var button = document.getElementById('btnSave');

                    button.addEventListener('click', function () {
                        if (!form.checkValidity()) {
                            form.classList.add('was-validated');
                        } else {
                            // alert('Formulário validado com sucesso!');
                            Save();
                        }
                    });
                })();



                // Função Incluida
                const Save = () => {
                    if (!validaCPF( $('#cpf').val() )) {
                        alert('CPF inválido. Verifique o número digitado.');
                        $('#cpf').focus();

                        return;
                    }

                    var url = '/clienteAPI/api/v1'; // customerId ? 'api/customers/' + customerId : 'api/customers'; // Update or Create
                    var method = $('#codigoCliente').val().trim() == '' ? 'POST' : 'PUT';
                    var sendInfo = {
                        codigo: $('#codigoCliente').val().trim() == '' ? null : $('#codigoCliente').val(),
                        cpf: $('#cpf').val(),
                        nome: $('#nome').val(),
                        dataNascimento: $('#dataNascimento').val(),
                        rg: removeNonNumeric( $('#rg').val() ),
                        sexo: $('#sexo').val(),
                        estadoCivil: $('#estadoCivil').val(),
                        pai: $('#pai').val(),
                        mae: $('#mae').val(),
                        endereco: $('#endereco').val(),
                        cidade: $('#cidade').val(),
                        estado: $('#estado').val(),
                        cep: removeNonNumeric($('#cep').val()),
                        telefone: removeNonNumeric( $('#telefone').val() )
                    };

                    $.ajax({
                        url: url,
                        type: method,
                        data: JSON.stringify(sendInfo),
                        contentType: "application/json; charset=utf-8",
                        success: function () {
                            alert('Cliente incluido com sucesso!!!');
                            $('#formModal').modal('hide');
                            $('#clienteTable').DataTable().ajax.reload();
                        },
                        error: function (request, status, error) {
                            alert(request.responseText);
                        }
                    });
                }

            });





        . Coloque na partial view "_ClienteModal.cshtml" em cada campo com validação "required/email/..." a tag de validação "<div class='invalid-feedback'>...</div>" como abaixo:

            <!-- Modal for adding/editing customers -->
            <div class="modal fade" id="formModal" tabindex="-1" role="dialog" aria-labelledby="formModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="formModalLabel">Detalhes</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="clienteForm">
                                <input type="hidden" id="codigoCliente" name="codigoCliente">

                                <div class="row">
                                    <div class="col-3">
                                        <div class="form-group">
                                            <label for="cpf">CPF</label>
                                            <input type="text" class="form-control form-control-sm"
                                                aria-label=".form-control-sm example" 
                                                placeholder="123.456.789-00" id="cpf" name="cpf"
                                                required>

                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo CPF é Obrigatório
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-9">
                                        <div class="form-group">
                                            <label for="nome">Nome</label>
                                            <input type="text" 
                                                    class="form-control form-control-sm" 
                                                    id="nome" 
                                                    name="nome" 
                                                    required            <!-- Incluido -->
                                                    minlength="5"       <!-- Incluido -->
                                                    maxlength="100">    <!-- Incluido -->


                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo Nome é Obrigatório e deve ter ao menos 5 caracteres
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12">
                                        <div class="form-group">
                                            <label for="endereco">Endereço</label>
                                            <input type="text" class="form-control form-control-sm" 
                                                    id="endereco" 
                                                    name="endereco"
                                                    required
                                                    minlength="5"       <!-- Incluido -->
                                                    maxlength="100">    <!-- Incluido -->


                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo Endereço é Obrigatório e deve ficar entre 5 a 100 caracteres
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label for="cidade">Cidade</label>
                                            <input type="text" 
                                                    class="form-control form-control-sm" 
                                                    id="cidade" 
                                                    name="cidade"
                                                    required
                                                    minlength="5"       <!-- Incluido -->
                                                    maxlength="50">     <!-- Incluido -->

                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo Cidade é Obrigatório e deve ficar entre 5 a 50 caracteres
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div class="form-group">
                                            <label for="estado">UF</label>

                                            <select class="form-select form-select-sm" aria-label=".form-select-sm example"
                                                id="estado" name="estado" required>
                                                <option value="" selected>Selecione</option>
                                                <option value="AC">Acre</option>
                                                <option value="AL">Alagoas</option>
                                                <option value="AP">Amapá</option>
                                                <option value="AM">Amazonas</option>
                                                <option value="BA">Bahia</option>
                                                <option value="CE">Ceará</option>
                                                <option value="DF">Distrito Federal</option>
                                                <option value="ES">Espírito Santo</option>
                                                <option value="GO">Goiás</option>
                                                <option value="MA">Maranhão</option>
                                                <option value="MT">Mato Grosso</option>
                                                <option value="MS">Mato Grosso do Sul</option>
                                                <option value="MG">Minas Gerais</option>
                                                <option value="PA">Pará</option>
                                                <option value="PB">Paraíba</option>
                                                <option value="PR">Paraná</option>
                                                <option value="PE">Pernambuco</option>
                                                <option value="PI">Piauí</option>
                                                <option value="RJ">Rio de Janeiro</option>
                                                <option value="RN">Rio Grande do Norte</option>
                                                <option value="RS">Rio Grande do Sul</option>
                                                <option value="RO">Rondônia</option>
                                                <option value="RR">Roraima</option>
                                                <option value="SC">Santa Catarina</option>
                                                <option value="SP">São Paulo</option>
                                                <option value="SE">Sergipe</option>
                                                <option value="TO">Tocantins</option>
                                                <option value="EX">Estrangeiro</option>
                                            </select>

                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo UF é Obrigatório
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div class="form-group">
                                            <label for="cep">CEP</label>
                                            <input type="text" 
                                                    class="form-control form-control-sm" 
                                                    id="cep" 
                                                    name="cep" 
                                                    required
                                                    minlength="8">  <!-- Incluido -->

                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo CEP é Obrigatório e deve conter 8 caracteres
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div class="form-group">
                                            <label for="sexo">Sexo</label>

                                            <select class="form-select form-select-sm" aria-label=".form-select-sm example"
                                                id="sexo" name="sexo" required>
                                                <option value="" selected>Selecione</option>
                                                <option value="M">Masculino</option>
                                                <option value="F">Feminino</option>
                                                <option value="O">Outros</option>
                                            </select>

                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo Sexo é Obrigatório
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-3">
                                        <div class="form-group">
                                            <label for="telefone">Telefone</label>
                                            <input type="tel" 
                                                    class="form-control form-control-sm" 
                                                    id="telefone" 
                                                    name="telefone"
                                                    placeholder="(99) 9999-9999"        <!-- Incluido -->
                                                    required
                                                    minlength="10">                     <!-- Incluido -->
                                            
                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo Telefone é Obrigatório
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div class="form-group">
                                            <label for="rg">RG</label>
                                            <input type="text" class="form-control form-control-sm" id="rg" name="rg" required>

                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo RG é Obrigatório
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group">
                                            <label for="email">Email</label>
                                            <input type="email" 
                                                    class="form-control form-control-sm" 
                                                    id="email" 
                                                    name="email"
                                                    aria-describedby="emailHelp" 
                                                    placeholder="Seu email" 
                                                    email                       <!-- Incluido -->
                                                    required>

                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo E-Mail Inválido
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div class="form-group">
                                            <label for="estadoCivil">Estado Civil</label>

                                            <select class="form-select form-select-sm" aria-label=".form-select-sm example"
                                                id="estadoCivil" name="estadoCivil" required>
                                                <option value="" selected>Selecione</option>
                                                <option value="CASADO">Casado</option>
                                                <option value="SOLTEIRO">Solteiro</option>
                                                <option value="OUTROS">Outro</option>
                                            </select>

                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo Estado Civil é Obrigatório
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-5">
                                        <div class="form-group">
                                            <label for="pai">Nome do Pai</label>
                                            <input type="text" 
                                                    class="form-control form-control-sm" 
                                                    id="pai" 
                                                    name="pai" 
                                                    maxlength="100">        <!-- Incluido -->

                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo Nome do Pai deve ficar entre 0 a 100 caracteres
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-5">
                                        <div class="form-group">
                                            <label for="mae">Nome da Mãe</label>
                                            <input type="text" 
                                                    class="form-control form-control-sm" 
                                                    id="mae" 
                                                    name="mae" 
                                                    maxlength="100">

                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo Nome da Mãe deve ficar entre 0 a 100 caracteres
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div class="form-group">
                                            <label for="dataNascimento">Data Nasc</label>
                                            <input type="date" class="form-control form-control-sm" id="dataNascimento"
                                                name="dataNascimento" required>

                                            <!-- Tag Incluida -->    
                                            <div class="invalid-feedback">
                                                Campo Data Nasc é Obrigatório
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-3">
                                        <div class="form-group">
                                            <label for="salario">Salário</label>
                                            <input type="text" 
                                                    class="form-control form-control-sm" 
                                                    name="salario" 
                                                    id="salario" 
                                                    value="0,00"        <!-- Incluido -->
                                                    required>           <!-- Incluido -->

                                            <div class="invalid-feedback">
                                                Campo Salário Inválido
                                            </div>
                                        </div>

                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                            <button type="button" class="btn btn-primary" id="btnSave">Salvar</button>
                        </div>
                    </div>
                </div>
            </div>

        . Execute o projeto na pasta raiz da solution:

            dotnet run --project ./src/MvcDatatable.Web   

        . Acesse a página do "DataTable" e teste as validações na inclusão:

            http://localhost:[porta]/Cliente/List



Parte 9 - Inclusão das funcionalidades de Alteração e Exclusão
--------------------------------------------------------------

    . Atualize o método abaixo na classe "ClienteRepository.cs":

        ...
        public async Task<Cliente> GetByIdAsync(int id)
        {
            try
            {
                var cliente = await _context.Clientes
                                        .AsNoTracking()
                                        .FirstOrDefaultAsync(x => x.Codigo == id);

                return cliente;
            }
            catch (System.Exception)
            {

                throw;
            }
        }
        ...

    . Atualize o método baixo na classe "ClienteAPIController.cs":

        ...
        [HttpGet("v1/{codigo}")]
        public async Task<ActionResult<Cliente>> GetByCodigo([FromRoute] int codigo)
        {
            try
            {
                var cliente = await _clienteRepository.GetByIdAsync(codigo);

                return cliente == null ?
                                NotFound(new { Id = 1, error = $"Não foi encontrado cliente com o cpf {codigo}" }) :
                                Ok(new ResultViewModel<Cliente>(cliente));


            }
            catch (System.Exception)
            {
                throw;
            }
        }
        ...

    . Realize as mudanças abaixo no arquivo "cliente.js":

        // Bloco inserido
        ...
        // Edit Customer Button Click
        $('#clienteTable tbody').on('click', '.editBtn', function () {
            var clienteCodigo = $(this).data('id');
            $.ajax({
                url: '/clienteAPI/api/v1/' + clienteCodigo, // Replace with your ASP.NET API endpoint
                type: 'GET',
                datatype: 'json',
                success: function (data) {
                    $('#formModal').modal('show');
                    $('#formModalLabel').text('Alteração');
                    $('#btnSave').text('Salvar');
                    $('#codigoCliente').val(data.data.codigo);
                    $('#cpf').val(data.data.cpf);
                    $('#nome').val(data.data.nome);
                    $('#endereco').val(data.data.endereco);
                    $('#cidade').val(data.data.cidade);
                    $('#estado').val(data.data.estado);
                    $('#cep').val(data.data.cep);
                    $('#sexo').val(data.data.sexo);
                    $('#telefone').val(data.data.telefone);
                    $('#rg').val(data.data.rg);
                    $('#email').val(data.data.email);
                    $('#estadoCivil').val(data.data.estadoCivil);
                    $('#pai').val(data.data.pai);
                    $('#mae').val(data.data.mae);
                    $('#dataNascimento').val(data.data.dataNascimento.substring(0,10));
                },
                error: function (request, status, error) {
                    alert(request.responseText);
                }
            });
        });
        ...

        // Save/Update Customer Button Click
        const Save = () => {
            if (!validaCPF($('#cpf').val())) {
                alert('CPF inválido. Verifique o número digitado.');
                $('#cpf').focus();

                return;
            }


            // Linha alterada
            var url = $('#codigoCliente').val().trim() == '' ? 
                        '/clienteAPI/api/v1' : 
                        '/clienteAPI/api/v1/' + $('#codigoCliente').val().trim() ; 
            ...
        }                    

    . Execute o projeto na pasta raiz da solution:

        dotnet run --project ./src/MvcDatatable.Web   

    . Acesse a página do "DataTable" e teste as validações na inclusão:

        http://localhost:[porta]/Cliente/List




    . Inclua o código abaixo no arquivo javascript "cliente.js" com o conteúdo abaixo:

        $(document).ready(function () {

            ....

            // Função inserida

            // Delete Customer Button Click
            $('#clienteTable tbody').on('click', '.deleteBtn', function () {
                var clienteCodigo = $(this).data('id');

                if (confirm('Tem Certeza que quer Apagar o cliente ?')) {
                    $.ajax({
                        url: '/clienteAPI/api/v1/' + clienteCodigo,
                        type: 'DELETE',
                        success: function () {
                            $('#clienteTable').DataTable().ajax.reload();
                        }
                    });
                }
            });

        });

    . Execute o projeto na pasta raiz da solution:

        dotnet run --project ./src/MvcDatatable.Web   

    . Acesse a página do "DataTable" e teste a deleção dos clientes pelo botão de delete da datatable.

        http://localhost:[porta]/Cliente/List







. Desenvolvimento na segunda fase do tutorial:


    . Inclusão dos campos email e salario na tabela de clientes.

    . Mudar as msgs de alertas pelo "Toasty", ou "Alert" do Bootstrap:

        # Alert
        https://chatgpt.com/share/1ae423fd-120b-4c77-9c01-4c9c73aaeffc


        # Toasty
        https://www.youtube.com/watch?v=0-t4xHigyWk&list=PL7yxJa4Na-irux26rILnjv0G33DrTC3Jq&index=2
        https://www.youtube.com/watch?v=A_B4DLz9k-Q&list=PL7yxJa4Na-irux26rILnjv0G33DrTC3Jq&index=3

    . Desenvolver funcionalidade para mudar todos os caracteres minusculo para maiusculo e retirar caracateres especiais:

        https://mail.google.com/mail/u/0/#inbox/KtbxLwgdgGSQwTlFBdHbCcnQZvNKjcXdtL

    . Utilizando a biblioteca JQuery Validation:

        Desenvolver na segunda etapa do tutorial baseando-se nos exemplos:
        
            https://www.devmedia.com.br/validacao-com-jquery-como-usar-o-plugin-validation/33670
            https://www.youtube.com/watch?v=Lf2-M8C4j-E&t=10s

    . Utilizar a biblioteca JQuery Validate para validações vindas do servidor. Testar para validar o CPF fazendo uso dessa
        biblioteca junto com o validate do bootstrap

        Desenvolver na segunda etapa do tutorial 

    . Criar os campos salario e email na tabela de cliente e adapatar o tutorial


    . Melhorar a disposição dos botões de export do Datatable:

        https://www.youtube.com/watch?v=4aajwYY2NxI&list=PL7yxJa4Na-irux26rILnjv0G33DrTC3Jq&index=14


    . Alterar os alerts por algo que se assemelhe ao bootstrap
        
        https://www.youtube.com/watch?v=9JM2FRzifas
        https://notifyjs.jpillora.com/
        https://www.jqueryscript.net/other/growl-notification-bootstrap-alert.html
        https://bootboxjs.com/examples.html

https://www.youtube.com/watch?v=bESQ7X_pMR0

https://www.youtube.com/watch?v=fB1TmfaT6pg

https://designmodo.com/validate-forms-bootstrap/

https://chinhplq.wordpress.com/2016/05/18/dynamic-error-message-in-jquery-validation/


https://codepen.io/akalkhair/pen/dyPaozZ


https://datatables.net/extensions/buttons/examples/initialisation/simple.html

https://www.ezzylearning.net/tutorial/jquery-datatables-paging-sorting-and-filtering-in-asp-net-core-using-dapper-orm

    # Icons
    https://getbootstrap.com/docs/5.0/extend/icons/

    # Ver a instalação das ferramentas dotnet-ef e dotnet-aspnet-codegenerator. Este último pesquisar
    https://medium.com/@Mohammed_Taherali/mysql-connection-in-net-core-8-mvc-86c71c3613fd

    https://datatables.net/examples/data_sources/server_side.html
    https://www.w3schools.com/bootstrap/bootstrap_ver.asp